<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4.0'>
        <calculation class='tableau' formula='4.0' />
        <range granularity='1.0' max='10.0' min='1.0' />
      </column>
    </datasource>
    <datasource caption='air_bnb_all_cities' inline='true' name='federated.11vinx40duwgbv1ej636w0oqq2to' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='air_bnb_all_cities' name='textscan.0hkrp1k0n1urqe1acvfmc1lryf5h'>
            <connection class='textscan' directory='C:/Users/TejaKrishnaPulaganti/Downloads' filename='air_bnb_all_cities.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0hkrp1k0n1urqe1acvfmc1lryf5h' name='air_bnb_all_cities.csv' table='[air_bnb_all_cities#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='real' name='realSum' ordinal='0' />
            <column datatype='string' name='room_type' ordinal='1' />
            <column datatype='boolean' name='room_shared' ordinal='2' />
            <column datatype='boolean' name='room_private' ordinal='3' />
            <column datatype='real' name='person_capacity' ordinal='4' />
            <column datatype='boolean' name='host_is_superhost' ordinal='5' />
            <column datatype='integer' name='multi' ordinal='6' />
            <column datatype='integer' name='biz' ordinal='7' />
            <column datatype='real' name='cleanliness_rating' ordinal='8' />
            <column datatype='real' name='guest_satisfaction_overall' ordinal='9' />
            <column datatype='integer' name='bedrooms' ordinal='10' />
            <column datatype='real' name='dist' ordinal='11' />
            <column datatype='real' name='metro_dist' ordinal='12' />
            <column datatype='real' name='attr_index' ordinal='13' />
            <column datatype='real' name='attr_index_norm' ordinal='14' />
            <column datatype='real' name='rest_index' ordinal='15' />
            <column datatype='real' name='rest_index_norm' ordinal='16' />
            <column datatype='real' name='lng' ordinal='17' />
            <column datatype='real' name='lat' ordinal='18' />
            <column datatype='string' name='City' ordinal='19' />
            <column datatype='string' name='day' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0hkrp1k0n1urqe1acvfmc1lryf5h' name='air_bnb_all_cities.csv' table='[air_bnb_all_cities#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='real' name='realSum' ordinal='0' />
            <column datatype='string' name='room_type' ordinal='1' />
            <column datatype='boolean' name='room_shared' ordinal='2' />
            <column datatype='boolean' name='room_private' ordinal='3' />
            <column datatype='real' name='person_capacity' ordinal='4' />
            <column datatype='boolean' name='host_is_superhost' ordinal='5' />
            <column datatype='integer' name='multi' ordinal='6' />
            <column datatype='integer' name='biz' ordinal='7' />
            <column datatype='real' name='cleanliness_rating' ordinal='8' />
            <column datatype='real' name='guest_satisfaction_overall' ordinal='9' />
            <column datatype='integer' name='bedrooms' ordinal='10' />
            <column datatype='real' name='dist' ordinal='11' />
            <column datatype='real' name='metro_dist' ordinal='12' />
            <column datatype='real' name='attr_index' ordinal='13' />
            <column datatype='real' name='attr_index_norm' ordinal='14' />
            <column datatype='real' name='rest_index' ordinal='15' />
            <column datatype='real' name='rest_index_norm' ordinal='16' />
            <column datatype='real' name='lng' ordinal='17' />
            <column datatype='real' name='lat' ordinal='18' />
            <column datatype='string' name='City' ordinal='19' />
            <column datatype='string' name='day' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>realSum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[realSum]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>realSum</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[room_type]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>room_type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_shared</remote-name>
            <remote-type>11</remote-type>
            <local-name>[room_shared]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>room_shared</remote-alias>
            <ordinal>2</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_private</remote-name>
            <remote-type>11</remote-type>
            <local-name>[room_private]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>room_private</remote-alias>
            <ordinal>3</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>person_capacity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[person_capacity]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>person_capacity</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_is_superhost</remote-name>
            <remote-type>11</remote-type>
            <local-name>[host_is_superhost]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>host_is_superhost</remote-alias>
            <ordinal>5</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>multi</remote-name>
            <remote-type>20</remote-type>
            <local-name>[multi]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>multi</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>biz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[biz]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>biz</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cleanliness_rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cleanliness_rating]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>cleanliness_rating</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>guest_satisfaction_overall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[guest_satisfaction_overall]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>guest_satisfaction_overall</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bedrooms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bedrooms]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>bedrooms</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dist]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>dist</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metro_dist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[metro_dist]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>metro_dist</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attr_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[attr_index]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>attr_index</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attr_index_norm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[attr_index_norm]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>attr_index_norm</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rest_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rest_index]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>rest_index</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rest_index_norm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rest_index_norm]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>rest_index_norm</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lng]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>lng</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
          <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
          <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
          <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
          <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
          <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
          <semantic-value key='&quot;paris&quot;' value='48.8566' />
          <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
          <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
          <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
          <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
          <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
          <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
          <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
          <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
          <semantic-value key='&quot;rome&quot;' value='12.4964' />
          <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
        </semantic-values>
      </column>
      <column aggregation='None' datatype='integer' name='[Cleanliness Rating (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[cleanliness_rating]' peg='0' size='1.328' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='air_bnb_all_cities.csv' datatype='table' name='[__tableau_internal_object_id__].[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]' role='measure' type='quantitative' />
      <column caption='Attr Index' datatype='real' name='[attr_index]' role='measure' type='quantitative' />
      <column caption='Attr Index Norm' datatype='real' name='[attr_index_norm]' role='measure' type='quantitative' />
      <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
      <column caption='Biz' datatype='integer' name='[biz]' role='measure' type='quantitative' />
      <column caption='Cleanliness Rating' datatype='real' name='[cleanliness_rating]' role='measure' type='quantitative' />
      <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
      <column caption='Dist' datatype='real' name='[dist]' role='measure' type='quantitative' />
      <column caption='Guest Satisfaction Overall' datatype='real' name='[guest_satisfaction_overall]' role='measure' type='quantitative' />
      <column caption='Host Is Superhost' datatype='boolean' name='[host_is_superhost]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Lng' datatype='real' name='[lng]' role='measure' type='quantitative' />
      <column caption='Metro Dist' datatype='real' name='[metro_dist]' role='measure' type='quantitative' />
      <column caption='Multi' datatype='integer' name='[multi]' role='measure' type='quantitative' />
      <column caption='Person Capacity' datatype='real' name='[person_capacity]' role='measure' type='quantitative' />
      <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
      <column caption='Rest Index' datatype='real' name='[rest_index]' role='measure' type='quantitative' />
      <column caption='Rest Index Norm' datatype='real' name='[rest_index_norm]' role='measure' type='quantitative' />
      <column caption='Room Private' datatype='boolean' name='[room_private]' role='dimension' type='nominal' />
      <column caption='Room Shared' datatype='boolean' name='[room_shared]' role='dimension' type='nominal' />
      <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
      <column-instance column='[cleanliness_rating]' derivation='Avg' name='[avg:cleanliness_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[guest_satisfaction_overall]' derivation='Avg' name='[avg:guest_satisfaction_overall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[metro_dist]' derivation='Avg' name='[avg:metro_dist:qk]' pivot='key' type='quantitative' />
      <column-instance column='[person_capacity]' derivation='Avg' name='[avg:person_capacity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[guest_satisfaction_overall]' derivation='Median' name='[med:guest_satisfaction_overall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[realSum]' derivation='Median' name='[med:realSum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[cleanliness_rating]' derivation='None' name='[none:cleanliness_rating:ok]' pivot='key' type='ordinal' />
      <column-instance column='[day]' derivation='None' name='[none:day:nk]' pivot='key' type='nominal' />
      <column-instance column='[guest_satisfaction_overall]' derivation='None' name='[none:guest_satisfaction_overall:ok]' pivot='key' type='ordinal' />
      <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
      <group caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
        </groupfilter>
      </group>
      <group caption='Action (City,Day)' hidden='true' name='[Action (City,Day)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[day]' />
        </groupfilter>
      </group>
      <group caption='Action (City,Room Type)' hidden='true' name='[Action (City,Room Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[room_type]' />
        </groupfilter>
      </group>
      <group caption='Action (Cleanliness Rating,Guest Satisfaction Overall)' hidden='true' name='[Action (Cleanliness Rating,Guest Satisfaction Overall)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:cleanliness_rating:ok]' />
          <groupfilter function='level-members' level='[none:guest_satisfaction_overall:ok]' />
        </groupfilter>
      </group>
      <group caption='Bottom' name='[City Set 2]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([realSum])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[City]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top city' name='[City Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([realSum])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[City]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Affordable and Expensive' delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[City Set 2]' function='reference' />
          <groupfilter field='[City Set]' function='reference' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Assignments/Coding Challenge BI/air_bnb_all_cities.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/27/2023 06:16:45 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='air_bnb_all_cities' increment-value='%null%' refresh-type='create' rows-inserted='51707' timestamp-start='2023-03-27 06:16:43.942' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>realSum</remote-name>
              <remote-type>5</remote-type>
              <local-name>[realSum]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>realSum</remote-alias>
              <ordinal>0</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7847</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[room_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room_type</remote-alias>
              <ordinal>1</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room_shared</remote-name>
              <remote-type>11</remote-type>
              <local-name>[room_shared]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room_shared</remote-alias>
              <ordinal>2</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room_private</remote-name>
              <remote-type>11</remote-type>
              <local-name>[room_private]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room_private</remote-alias>
              <ordinal>3</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>person_capacity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[person_capacity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>person_capacity</remote-alias>
              <ordinal>4</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>host_is_superhost</remote-name>
              <remote-type>11</remote-type>
              <local-name>[host_is_superhost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>host_is_superhost</remote-alias>
              <ordinal>5</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>multi</remote-name>
              <remote-type>20</remote-type>
              <local-name>[multi]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>multi</remote-alias>
              <ordinal>6</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>biz</remote-name>
              <remote-type>20</remote-type>
              <local-name>[biz]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>biz</remote-alias>
              <ordinal>7</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cleanliness_rating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cleanliness_rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cleanliness_rating</remote-alias>
              <ordinal>8</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>guest_satisfaction_overall</remote-name>
              <remote-type>5</remote-type>
              <local-name>[guest_satisfaction_overall]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>guest_satisfaction_overall</remote-alias>
              <ordinal>9</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>68</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bedrooms</remote-name>
              <remote-type>20</remote-type>
              <local-name>[bedrooms]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bedrooms</remote-alias>
              <ordinal>10</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dist</remote-name>
              <remote-type>5</remote-type>
              <local-name>[dist]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dist</remote-alias>
              <ordinal>11</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>metro_dist</remote-name>
              <remote-type>5</remote-type>
              <local-name>[metro_dist]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>metro_dist</remote-alias>
              <ordinal>12</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attr_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[attr_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attr_index</remote-alias>
              <ordinal>13</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attr_index_norm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[attr_index_norm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attr_index_norm</remote-alias>
              <ordinal>14</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rest_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[rest_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rest_index</remote-alias>
              <ordinal>15</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rest_index_norm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[rest_index_norm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rest_index_norm</remote-alias>
              <ordinal>16</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lng</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lng]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lng</remote-alias>
              <ordinal>17</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15080</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>18</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12775</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>19</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>day</remote-name>
              <remote-type>129</remote-type>
              <local-name>[day]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>day</remote-alias>
              <ordinal>20</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[med:guest_satisfaction_overall:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:metro_dist:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:guest_satisfaction_overall:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:cleanliness_rating:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:person_capacity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[med:realSum:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;amsterdam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;budapest&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;berlin&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;london&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;vienna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;barcelona&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;lisbon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;athens&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;paris&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:day:nk]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;weekends&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;weekdays&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:room_type:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Entire home/apt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Private room&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Shared room&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4.0'>
          <calculation class='tableau' formula='4.0' />
          <range granularity='1.0' max='10.0' min='1.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='air_bnb_all_cities.csv' id='air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB'>
            <properties context=''>
              <relation connection='textscan.0hkrp1k0n1urqe1acvfmc1lryf5h' name='air_bnb_all_cities.csv' table='[air_bnb_all_cities#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='real' name='realSum' ordinal='0' />
                  <column datatype='string' name='room_type' ordinal='1' />
                  <column datatype='boolean' name='room_shared' ordinal='2' />
                  <column datatype='boolean' name='room_private' ordinal='3' />
                  <column datatype='real' name='person_capacity' ordinal='4' />
                  <column datatype='boolean' name='host_is_superhost' ordinal='5' />
                  <column datatype='integer' name='multi' ordinal='6' />
                  <column datatype='integer' name='biz' ordinal='7' />
                  <column datatype='real' name='cleanliness_rating' ordinal='8' />
                  <column datatype='real' name='guest_satisfaction_overall' ordinal='9' />
                  <column datatype='integer' name='bedrooms' ordinal='10' />
                  <column datatype='real' name='dist' ordinal='11' />
                  <column datatype='real' name='metro_dist' ordinal='12' />
                  <column datatype='real' name='attr_index' ordinal='13' />
                  <column datatype='real' name='attr_index_norm' ordinal='14' />
                  <column datatype='real' name='rest_index' ordinal='15' />
                  <column datatype='real' name='rest_index_norm' ordinal='16' />
                  <column datatype='real' name='lng' ordinal='17' />
                  <column datatype='real' name='lat' ordinal='18' />
                  <column datatype='string' name='City' ordinal='19' />
                  <column datatype='string' name='day' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_53489D4BA2124924AEED936C0C2D25EC]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Affordable &amp; Expensive' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Affordable &amp; Expensive' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3_2D4DD8C6E5ED4FAD8CE3FD80C04C8CB6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Final Dashboard' type='sheet' worksheet='Affordable &amp; Expensive' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Final Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action5_53DD40DF5F39467BB259A58DE8F30D64]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Final Dashboard' type='sheet' worksheet='Type Of Room' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Final Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action5_D0BA231176684239AD41B37F87DFEB0F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Final Dashboard' type='sheet' worksheet='Ratings vs Airbnb Price' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Final Dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action6_DD31BF3757474297BE04F4964E23BAC3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Final Dashboard' type='sheet' worksheet='Weekday Vs Weekend' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Final Dashboard' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action7_D4E8D77E15714FB3B8106FC78548244A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Final Dashboard' type='sheet' worksheet='Sales drivers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Final Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Affordable &amp; Expensive'>
      <table>
        <view>
          <datasources>
            <datasource caption='air_bnb_all_cities' name='federated.11vinx40duwgbv1ej636w0oqq2to' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4.0'>
              <calculation class='tableau' formula='4.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11vinx40duwgbv1ej636w0oqq2to'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
                <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
                <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
                <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
                <semantic-value key='&quot;paris&quot;' value='48.8566' />
                <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
                <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
                <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
                <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
                <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
                <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
                <semantic-value key='&quot;rome&quot;' value='12.4964' />
                <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
              </semantic-values>
            </column>
            <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
            <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action6_4BD8D191E37C4F3DB69430DFDAA18796]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DD31BF3757474297BE04F4964E23BAC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[day]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_53DD40DF5F39467BB259A58DE8F30D64]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[room_type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' scope='cols' value='Avg Booking Price' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' num-steps='4' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff5a5f</color>
                <color>#f87276</color>
                <color>#f2898c</color>
                <color>#ec9fa1</color>
                <color>#e5b4b5</color>
                <color>#dfc7c7</color>
                <color>#d9d9d9</color>
                <color>#add0cd</color>
                <color>#85c8c2</color>
                <color>#5fbfb8</color>
                <color>#3cb7ad</color>
                <color>#1daea3</color>
                <color>#00a699</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='5' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</rows>
        <cols>[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]</cols>
      </table>
      <simple-id uuid='{610289D0-7D39-4AA7-B205-9CE09BE5815C}' />
    </worksheet>
    <worksheet name='Ratings vs Airbnb Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='air_bnb_all_cities' name='federated.11vinx40duwgbv1ej636w0oqq2to' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4.0'>
              <calculation class='tableau' formula='4.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11vinx40duwgbv1ej636w0oqq2to'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
                <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
                <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
                <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
                <semantic-value key='&quot;paris&quot;' value='48.8566' />
                <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
                <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
                <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
                <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
                <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
                <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
                <semantic-value key='&quot;rome&quot;' value='12.4964' />
                <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
              </semantic-values>
            </column>
            <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
            <column caption='Cleanliness Rating' datatype='real' name='[cleanliness_rating]' role='measure' type='quantitative' />
            <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
            <column caption='Guest Satisfaction Overall' datatype='real' name='[guest_satisfaction_overall]' role='measure' type='quantitative' />
            <column-instance column='[cleanliness_rating]' derivation='None' name='[none:cleanliness_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[guest_satisfaction_overall]' derivation='None' name='[none:guest_satisfaction_overall:qk]' pivot='key' type='quantitative' />
            <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action6_4BD8D191E37C4F3DB69430DFDAA18796]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DD31BF3757474297BE04F4964E23BAC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[day]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_53DD40DF5F39467BB259A58DE8F30D64]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[room_type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]' />
          <slices>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:cleanliness_rating:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:guest_satisfaction_overall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]</rows>
        <cols>([federated.11vinx40duwgbv1ej636w0oqq2to].[none:cleanliness_rating:qk] + [federated.11vinx40duwgbv1ej636w0oqq2to].[none:guest_satisfaction_overall:qk])</cols>
      </table>
      <simple-id uuid='{D4E009B4-6C95-4A0A-925B-FA316FD8DBB3}' />
    </worksheet>
    <worksheet name='Sales drivers'>
      <table>
        <view>
          <datasources>
            <datasource caption='air_bnb_all_cities' name='federated.11vinx40duwgbv1ej636w0oqq2to' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4.0'>
              <calculation class='tableau' formula='4.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11vinx40duwgbv1ej636w0oqq2to'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
                <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
                <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
                <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
                <semantic-value key='&quot;paris&quot;' value='48.8566' />
                <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
                <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
                <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
                <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
                <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
                <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
                <semantic-value key='&quot;rome&quot;' value='12.4964' />
                <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
              </semantic-values>
            </column>
            <column-instance column='[bedrooms]' derivation='Avg' name='[avg:bedrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cleanliness_rating]' derivation='Avg' name='[avg:cleanliness_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[guest_satisfaction_overall]' derivation='Avg' name='[avg:guest_satisfaction_overall:qk]' pivot='key' type='quantitative' />
            <column-instance column='[metro_dist]' derivation='Avg' name='[avg:metro_dist:qk]' pivot='key' type='quantitative' />
            <column-instance column='[person_capacity]' derivation='Avg' name='[avg:person_capacity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='Cleanliness Rating' datatype='real' name='[cleanliness_rating]' role='measure' type='quantitative' />
            <column caption='Guest Satisfaction Overall' datatype='real' name='[guest_satisfaction_overall]' role='measure' type='quantitative' />
            <column caption='Metro Dist' datatype='real' name='[metro_dist]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column caption='Person Capacity' datatype='real' name='[person_capacity]' role='measure' type='quantitative' />
            <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:guest_satisfaction_overall:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:metro_dist:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:person_capacity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:cleanliness_rating:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.11vinx40duwgbv1ej636w0oqq2to].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]&quot;</bucket>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:guest_satisfaction_overall:qk]&quot;</bucket>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:metro_dist:qk]&quot;</bucket>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:person_capacity:qk]&quot;</bucket>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:cleanliness_rating:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[:Measure Names]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='width' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[:Measure Names]' value='111' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[Multiple Values]' num-steps='7' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#daf2da</color>
                <color>#c3f3c3</color>
                <color>#abf5ab</color>
                <color>#93f693</color>
                <color>#7cf87c</color>
                <color>#63f963</color>
                <color>#4bfa4b</color>
                <color>#32fc32</color>
                <color>#19fd19</color>
                <color>#00ff00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Multiple Values]' />
              <lod column='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:bedrooms:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</rows>
        <cols>[federated.11vinx40duwgbv1ej636w0oqq2to].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E2B856F2-CF83-4762-AA71-5041E86417A9}' />
    </worksheet>
    <worksheet name='Type Of Room'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Room type across Cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='air_bnb_all_cities' name='federated.11vinx40duwgbv1ej636w0oqq2to' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4.0'>
              <calculation class='tableau' formula='4.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11vinx40duwgbv1ej636w0oqq2to'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
                <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
                <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
                <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
                <semantic-value key='&quot;paris&quot;' value='48.8566' />
                <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
                <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
                <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
                <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
                <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
                <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
                <semantic-value key='&quot;rome&quot;' value='12.4964' />
                <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
              </semantic-values>
            </column>
            <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
            <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action3_2D4DD8C6E5ED4FAD8CE3FD80C04C8CB6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DD31BF3757474297BE04F4964E23BAC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[day]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]' />
          <slices>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' scope='cols' value='Avg Booking Price' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]</rows>
        <cols>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{52D5F28C-1CE9-4AC5-AFF4-329D8D0A6DF4}' />
    </worksheet>
    <worksheet name='Weekday Vs Weekend'>
      <table>
        <view>
          <datasources>
            <datasource caption='air_bnb_all_cities' name='federated.11vinx40duwgbv1ej636w0oqq2to' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4.0'>
              <calculation class='tableau' formula='4.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11vinx40duwgbv1ej636w0oqq2to'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
                <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
                <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
                <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
                <semantic-value key='&quot;paris&quot;' value='48.8566' />
                <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
                <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
                <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
                <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
                <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
                <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
                <semantic-value key='&quot;rome&quot;' value='12.4964' />
                <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
              </semantic-values>
            </column>
            <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
            <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[day]' derivation='None' name='[none:day:nk]' pivot='key' type='nominal' />
            <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action6_4BD8D191E37C4F3DB69430DFDAA18796]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_53DD40DF5F39467BB259A58DE8F30D64]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[room_type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]' />
          <slices>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' scope='cols' value='Avg Booking Price' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]</rows>
        <cols>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{15534AFB-F2D8-4FB3-AFAE-DE4252AA815C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Final Dashboard'>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4.0'>
          <calculation class='tableau' formula='4.0' />
          <range granularity='1.0' max='10.0' min='1.0' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='33' param='horz' type-v2='layout-flow' w='98438' x='781' y='1042'>
            <zone h='97916' id='31' type-v2='layout-basic' w='98438' x='781' y='1042'>
              <zone h='32638' id='29' name='Affordable &amp; Expensive' w='49217' x='781' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32638' id='58' name='Weekday Vs Weekend' w='49221' x='49998' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32638' id='37' name='Ratings vs Airbnb Price' w='49217' x='781' y='33680'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32640' id='60' name='Sales drivers' w='98438' x='781' y='66318'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32638' id='62' name='Type Of Room' w='49221' x='49998' y='33680'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8854' id='64' is-scaled='1' param='C:/Users/ManojP/Downloads/download.jpg' type-v2='bitmap' w='10449' x='-9277' y='521' />
        <zone h='8724' id='34' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='15625' x='28906' y='7943' />
        <zone h='7552' id='59' name='Weekday Vs Weekend' pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]' type-v2='color' w='13574' x='84375' y='4167' />
        <zone h='11458' id='63' name='Type Of Room' pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]' type-v2='color' w='12598' x='84668' y='35547' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='92' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='91' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone fixed-size='68' h='8854' id='64' is-fixed='true' is-scaled='1' param='C:/Users/ManojP/Downloads/download.jpg' type-v2='bitmap' w='10449' x='-9277' y='521'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='243' h='32638' id='29' is-fixed='true' name='Affordable &amp; Expensive' w='49217' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='243' h='32638' id='58' is-fixed='true' name='Weekday Vs Weekend' w='49221' x='49998' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7552' id='59' name='Weekday Vs Weekend' pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]' type-v2='color' w='13574' x='84375' y='4167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8724' id='34' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='15625' x='28906' y='7943'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='242' h='32638' id='37' is-fixed='true' name='Ratings vs Airbnb Price' w='49217' x='781' y='33680'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='242' h='32638' id='62' is-fixed='true' name='Type Of Room' w='49221' x='49998' y='33680'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11458' id='63' name='Type Of Room' pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]' type-v2='color' w='12598' x='84668' y='35547'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='243' h='32640' id='60' is-fixed='true' name='Sales drivers' w='98438' x='781' y='66318'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{39102036-2310-4956-85B0-0020466790FD}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Affordable &amp; Expensive'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C87D8F2F-1DDA-4C45-A4DD-5669BFB637C1}' />
    </window>
    <window class='worksheet' name='Weekday Vs Weekend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{796552A2-62AE-4616-B992-718B03B827D1}' />
    </window>
    <window class='worksheet' name='Ratings vs Airbnb Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:cleanliness_rating:qk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:guest_satisfaction_overall:qk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_private:nk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_shared:nk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{EAC52C0A-7499-48FA-803B-1D2D4B8ECB1D}' />
    </window>
    <window class='worksheet' maximized='true' name='Sales drivers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Multiple Values]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5A818D8C-227B-4F9E-8C84-1911FE65A48F}' />
    </window>
    <window class='worksheet' name='Type Of Room'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D46D11B-6D6C-4B87-8389-8CBDF439A15B}' />
    </window>
    <window class='dashboard' name='Final Dashboard'>
      <viewpoints>
        <viewpoint name='Affordable &amp; Expensive' />
        <viewpoint name='Ratings vs Airbnb Price'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales drivers'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Type Of Room'>
          <highlight field='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Weekday Vs Weekend'>
          <highlight>
            <color-one-way>
              <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='34' />
      <simple-id uuid='{A969553E-227B-4855-A974-3DBB0668D007}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='288' name='Affordable &amp; Expensive' width='288'>
      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
    </thumbnail>
    <thumbnail height='288' name='Final Dashboard' width='288'>
      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
      YII=
    </thumbnail>
    <thumbnail height='288' name='Ratings vs Airbnb Price' width='288'>
      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
    </thumbnail>
    <thumbnail height='288' name='Sales drivers' width='288'>
      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
    </thumbnail>
    <thumbnail height='288' name='Type Of Room' width='288'>
      iVBORw0KGgoAAAANSUhEUgAAASAAAAEgCAYAAAAUg66AAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXgc+X3f+XdV9X2gu9GN+z54gAdI8CaHx8yQMxxZl5U42iSP4+dZ725W
      9m7saFfajZR9IvnZZ7XryI8cRZadONE6ibSOZMeWJhqJM6PhMTyGJHgBIEGQuAiAuO8G0HdX
      1f5BajQ8ZogBQBRAfl/Pwz/YqK7ft7q6P/37/boOxTRNEyGEsIBqdQFCiOeXBJAQwjISQEII
      y0gACSEsIwEkhLCMBJAQwjISQEIIy0gACSEsIwEkxIpgEJ0cJ5kxrC5kWUkACWEBPT3LyZ98
      n6/9i3/Bd//TT4gmE/yXP/kWLcNzGHM9fPt7r1td4rKQABJimZmmycn//G1+eG6QQ4cPUxZ2
      kEprvPoP/zs2FHrovXWFd06cpqmphYGRMbq6ukjpJpDlzu1Okvqz00uSABJimZnGFG+82cEX
      v/pFXj50iM988tfIzzH4wTe/Rft0nHPH32Z6+DZ/8Rf/Hy0d3fzFn3yHtsFZspOdfPPPfsiz
      NEqzWV2AEM+fGWYy+ZSEHI/96z/477/A693H+Pa3vwoYOLtO8G5jG65gG5U7DuC1PTv9hmdn
      S4RYJRQlQtjVR/tgbB5Lq2w7+DJ9V07w5plb7H+hHlV56iUuGwkgIZab4uXznz/A//PlL/Hn
      3/sef/zdf8PdyfSv/pxTQE7/Rf7Vv/0+Td2jBCrqqVY6uTiew6bigIWFLz0ZggmxzBRFYcen
      f5dvVl/kzNUOymq3kpfj4cXPfZZirxPV5ucPvvkVTl7uxm63geJi65YNpMwX8DmfrT6DIhck
      E2IlS3L8h9/nr0618Xtf+wM2FvmtLmhJSQAJsaJluHX5EulgJZtqip+p+R+QABJCWOjZGlAK
      IVYVCSAhhGUkgIQQlpEAEkJYRgJICGEZCSAhhGUkgIQQlpEAEkJYxpIAutvXTTL9DF3URAix
      IMt6JLSemuPyxfN09A3iz8mjYf/LlIWcTI/0cfVyC+G6XWytKXj0iaZOZ+NxGsd8/L1P7UNL
      zXLuzDlmMzquYAWH9m5CSce5cvEsY7MZNH8RL+3bikOTDp4QK9myfkIn+m+T9FSxc+d2Xnrp
      EPl+O6aeZWx6jqqaEvRU5rHPi0320zuj4NZ0TKC76QKuyu184uhr5GV6uDUUZ7j7OnFvDa+9
      9hqVtjFaB2aWc9OEEAuwrJfj8AXDTF5vw1aSR2mFC5ddAzTWrt/IeG8r04+5PpOpp2lqaqO+
      oYH3LrUDcDeaZuvmIIqqUVlVyoX+EfT0BCVr6lFVjZrqUn7eNcrW8iAPn7uXyWQwjAeHf6Nz
      w8ykrAksVVEpDZTj0B5/dTwhnmXLGkCecCWfejXEsTd+zLG7Q2x74SWqC3wfurxpmox2X0Mp
      qCfPo73/eNbQ3++6KZoNI5NB13VU9d6jms1GJnOvN6Xr+gOBY7PZUJQHY+mNyz/hTNfJJdrK
      j8dt9/C1175BeajSkvaFsNKyBpBpGtjcOVTUrqdqTRW/OH6Z6l9/8SOeYHDx/FXMvEmOdcfp
      ujPKpcJCcpxOZtJZAm4bseg03tx1+ON+5mJxiDiJTk0Tyi0FQNM0NE378DaEEJZZ1gCaHuqi
      7W6MWHQSXU+TW1KKoacYHR5nfGyCyXiKwREX+WE/589cZOfB/Xzmt37n3pPj46TfbWNnwxrS
      QxlOXLyKUVfIjY4o+1+LYJ+t4lTjVfxmFbfbJtj+8rZHhl9CiJVlWSehg4XVrCkLkozHsQWq
      ObC9BtPMEp2YwHAEyQ/amIrOMN3fTsKdh+ODV19y5rB7+0ZsgK9oAwcbypmdSbLnpSMEHAqe
      cDkHdm8gPpegYf8hIl77cm6aEGIBlrUHpKgaecWVbNqUpLC8GJuqgOplXX39A8sl5mY5VOpB
      /eBcjeagMD/3/f8G88sI5j+wdvy5RWzMLXq6GyGEWDKWXJS+qnb9R/7d7Xu2rnsrhHg8OVJP
      CGEZCSAhhGUkgIQQlpEAEkJYRgJICGEZCSAhhGUkgIQQlpEAEkJYRgJICGEZCSAhhGUkgIQQ
      lpEAEkJYRgJICGEZCSAhhGUkgIQQlpEAEkJYRgJICGEZCSAhhGUkgIQQlpEAEkJYRgJICGEZ
      CSAhhGUkgIQQlpEAEkJYRgJICGEZSwKoq6ONeEq3omkhxAqyrLdmzsQmOXnyNCNT03hb2ti8
      /zVq810Mdbdy/kIzxQ0vsndD6QeeYTI10M571zpRVYVEymDPS4fJt89y7O2zqE47aSWXTx7d
      h5qKcurECZLYSZpefu3VQ3gc2nJunhDiY1rWAJoY7MJTspU9a+YoqajD7VQxjSy6I8iB/Q30
      xx5ToLeAo59ch02B4dsX6eobY3K6ldq9r1BX4OPOlV/Q0jdL3ux1/NV7OVJXxEDzSZp7p9iz
      JoLy0PoMw3i0EfOpbO68mab5+LqEeMYtawCFCsuInWmiy2HDF6nC7fSganbKysoY7219zDMU
      /MEgmCaxySFaOsep21tP+5DO9hwXKAp5RYV03B3Dnp0hsi4EQGFxIZduj8OaCNlsFl3/1XBP
      13VM88HEyerZp7nZH8k0TZLJJIlEwrIahLDKsgaQ01/IkSMHeff4m1xvfJehNTvYVpv/kc8x
      TYOBzmau3h6lYc9BSnPd3Mb8Vc9GUcA0MU0TRVHuP6RgGvdCRlXV9x8HcDgcD/wfwGZb1pfh
      AYqi4Ha78Xq9ltUghFWWdRLa0HUUu5twQTF7D+6k98bjej0fZDIz1MblrjhHXj1CWcSPAuS7
      HYzF0mCaTI2OEcyPEAwEmJqKAjA2Mk5efi5wL4A0TXv/38PhI4SwzrJ+9c+MdnPpeh+Tk8OM
      jE1Sur4BPTPLjWttjI/3M570YGbn2LSulLd+9i6vfPY1OpqaUZxV3Gi6AkBx9QbW12/grTOn
      GYv4GJtSeeVoAC2+nvYzjZwbCzAxleTFI+FH5n+EECvLsgZQoLCW/TmFXL3SSNWGXRSGfShm
      loraWspqawFQVBvRvg7y1tfjUlU2Hfo01anM++tweV04nGW8eiRELJGhwZeDS1PAH+Gll19i
      Np7E7fXjclo3rBJCzM+yfkoVRcHt9VNds4bcoBdVUUCxE8zNfWA53b+ZiHpvuOTy+nE9ZnrE
      6fbhdD+wduwuD7kuz1PdBiHE0rGkm1BUUv6Rf9c06b0I8TyQUzGEEJaRABJCWEYCSAhhGQkg
      IYRlJICEEJaRABJCWEYCSAhhGQkgIYRlJICEEJaRABJCWEYCSAhhGQkgIYRlJICEEJaRABJC
      WEYCSAhhGQkgIYRlJICEEJaRABJCWEYCSAhhGQkgIYRlJICEEJaRABJCWEYCSAhhGQkgIYRl
      JICEEJaxJICGh/pJZQwrmhZCrCDLeg9kI5PkZvMVWm51EoiUsX3ffgr8duLRMW62tOKt3MyG
      8shDz4nTfOkiw9EU+RXr2FJXhZZN0HT5IsPRBOGS9ezYXAXZFLeaL9E7NktOfjW7t67FpirL
      uXlCiI9pWXtAk/1tjGRCbNuxnX07t+CxKZh6hp6eXpxeJ4m55EPPMBlsayTqreXVV14iM9hG
      33iMuzcuMuer4eirh2G4ma7xFOO9rQymQ7zyyhG8M53cHp5bzk0TQizAsvaAnB4f8ekBZl05
      lHuDeFwaABu37mS8t5W+2ENPME3u9kZZ/1opmk2hsizCndEp0mMxNr1QgKo6WLe2nMu9wxSk
      RymvPohNs7NhXTlv946wodiPaRgYxq+Ge+l0GtM0H2gmm80+7U3/UKZpkkgkiDke3nghnn3L
      GkC+/BoObHdz4sQ7DA5MsHP/AYqDro98TiptYrffG0rZHCqZeIaUoWO/P7zSHA6yyRQZPYNH
      uxdoDoeDVDIFgPFQADmdThTlwaGZTVvWl+EBiqLgcrlwu92W1SCEVZb1k6coKsH8UmrWrqes
      soSTZy7xdz994KOeQY5PJR43CXsUkrEsbo8Lh81BXDfIAVKxOZw5FXhSHpKpNOBkbm4Wf04+
      ADbbPDbR4qkiRVFQVflBUjx/lncOaKCDq9c7iSdTTI4M4Q3kYpo6yUSCZCpNOpUikUxhGFmu
      Nl4iaZhUbazg2rnLRKfGaO2dpLI0Qt2afC423mR2doLG64NsXlNIcVk5XdebmJ6Z4kLzAJtq
      C6zOFSHEEyxrDyhUVEUsfouzzT3oG/dyeP8a9OwMzRevkQAgypXrc9Tkucm6QzhUBVfJZnZn
      b9PS2snmvYfI89rBu429tHGtqY0th14j7FLAVcsL9So3mlup3f0iRTnO5dw0IcQCKObDM7LL
      YGpyHF8gjF1bGX2UPzv3bc50nbSkbbfdw9de+wbloUpL2n9a7k71YrLsby0AnDYX+b6CR+b6
      xMpjyexrKDfy5IXEqvbPf/YlskbGkrbX5q3na6/935a0LT4emfkUQlhGAkgIYRkJICGEZaw7
      Ak8I8Uz6H374mxjm/E42lwASQiypRCY+7wCSIZgQwjISQEIIy0gACSEsIwEkhLCMBJAQwjIS
      QEIIyyziZ3iT8z/9D7x5uef9R/Ird/Hb/+0nkUtrCSHmYxEBNML/+69e57/519+ixnPvrGOH
      KwfHEhUmhHj2LSKA8tm+K5+s4cTnuxc7mt0hFwETQszbIgIoRSI2x3/84/+Tn3ntABTVHuD3
      f//zeJeoOCHEs20RAZSgpwe+/sM/Y51H+j1CiI9vEQHkpqbGxus/ep2tJR4AfKEydu6sw75E
      xQkhnm2LCKAstTuPMp6dYXh4BoCgGUBuuCyEmK9FHAekIJfcFUIsxiJ6QCq5+QVougGYtJ8/
      Rm86n08sWWlCiGfdouaAdr308vv3PagrzPJHP7hDFmQOSAgxL4sIoCg/+Pb3GEzfu6/69FAX
      9uKX0ZaoMCHEs28RAeRh39FPkLh/33XN7qaiqlKOhBZCzNuCAshMzXDtVj+bNq1Hzcxw6s03
      6U94CBUV43HImWBCiPlZ0K9gQzdO8Z3v/wzdhHd/9Cf87aVhlOGL/OlfnkBfdElzdHaOLHot
      QoiVb0E9oInxESLhcmxEef2n5/iNb/yQ9dkLNH7nOnE+iX+BxUwPdtLYcp2BoSSdg+t4ZX8D
      2blRzp6/RsYwsfny2Ld7Gy4zxrkz55jN6LiCFRzauwklHefKxbOMzWbQ/EW8tG8rDk2uNiLE
      SragACqtWc/YX/01P/jTNsaKD7OnNkDPibsY+RFcCy4lS9uNVup276egN8aatQWoisntyxco
      3fYaayN2uq6eoa13nMBkM67K7eyvzuXG2WPcGqomFL1O3FvDay9U0nHxHVoHZmgoDy64GiHE
      07egAArW7OMrX8hwsWOCb/6jT+NRsiTI57f+/vZF/ASvEQp6uH27nYCjBI/HDZjk5gXpuDtE
      bbCAsak4+WUe+u6k2bo5iKJqVFaVcqF/BD09QcmaelRVo6a6lJ93jbK1PPjI2fmZTAbDePB4
      bUO38vhtk0wmQyqVsrCGp8F88iJPiWEapNMpkGszrHgLCiBF0Vi382XW7fzVY9uPfGaRpSis
      33WEvJ5r/OTEOUanhjj84m5CRZWkLlznzeGbaK4AdX4n3Yb+/uSVotkwMhl0XUdV7z2q2Wxk
      MhkAdF1/IHBsNhvKQ4dwq5YO1RTsdjtOp9PCGp4G6z78qqLicDgf2c9i5VlBNyY0MQwIFxaz
      bkuQ0mwbN/rjRK9eYden/w65Npi4c42mm72EnE5m0lkCbhux6DTe3HX4437mYnGIOIlOTRPK
      LQVA0zQ0TY5OEmIlWkAAJXj39Z/TG4098pdgwTqOHt3Nwr7LM7RduYrhVJmayJDO6Kzf4MSb
      76OlqZWafC93OgaIrNtLZXEZJy5exagr5EZHlP2vRbDPVnGq8Sp+s4rbbRNsf3mbdMCFWOEW
      EEAqwbw8Uu5Hf+vyhXIWcXarg3X1m+nraCEeT7Lr0GHyfXaK9h4meLeb8egcNQ0HKI4EUJQw
      B7W79I/OsOelIwQcCoTLObDbQd/gJA37DxHxygkhQqx0CwggJ1v2HQQgm4hys62d1P2Df9x+
      z6J6HTanl+q160m6UhSE7l9XUdEoqlhD0UPLBvPLCOZ/8BEFf24RG3MfXlIIsVItYg4ow/e+
      8SVupAIYcypaaoDglt/gq+srFjex5AixoXYxKxBCrBaLyIpxLp1L8MW//hK3TkZpKOvjz08k
      5EZjQoh5W0QA5VJemWByOshA998SH8syMRleglMxhBDPi0UEkJMv/tGfknUEWfO5oxy/3MVX
      vvya3JRQCDFvi5quUUnz9o++x4ReyN6tfjp6R6jK98vP30KIeVnElE2CP/nn/xv9jiKcM9MY
      tiQ//ZvjPGsnFAghnp5FBNAcPXeyvPqZo5RHfGSzWfRkSuaAhBDztoghWJi/+5s7+c4/+wpa
      fBb9ooMXP/8/4Vm62oQQz7hF3RXj8D/8IhsO3GU6lsIXDBP0uNAXt1IhxHNkYUMwM82lt/+G
      b/3xd2kaTFJXt47s4FW+9d2/IrHEBQohnl0L6qyMt53mW3/5Lv/z73yev/zOH9DXdoRLF9r4
      J1/9Kr6lrlAI8cxaUAAN9HRRvv4gu3e9wMT2H/ODy/380R9+g/LQwq+HKIR4/iz4V7DhO038
      5Md/y7WuUfLCAS6f/DnvnG4ivZTVCSGeaQu7JvSmA/yd5C10YPPLn1vikoQQz4sFBVC4fAOf
      Ld+w1LUIIZ4zcvK6EMIySxZAybkxWpo6yCzVCoUQz7wlC6D4dD9nTzdJAAkh5m3JDloOlWzh
      f/zd+lU5piu0e1njsuYmhi67G6dcP0A8pxYRQAn+5t/9O3pndRQFDEMH1UakdB2f/dQRgu7V
      c1H416bucGTgsjWNO3x4dLmGgHg+LaLDYtJy9iLVew5y8OBBqnLSDM45mGz5Kf/2xxex8l6j
      QojVYREBFGd8NE5p7Ua2b9vG1ob1JEbTvPDSLsba78hckBDiiRZ1OY7f+M29/On/8WWqyvIY
      uNPF5k/9Y1ITjRSt27mIe8QLIZ4Xi5qEPvT3v0jNrg4mY2ncOWGqK0tJTNVS7w6tysloIcTy
      WkROTPIvv/zPOHahDcMRoKqiFLuqkBMuIOBxLF2FQohn1iICKMQXvvJlthTbOf3Gf+bL//T3
      +fd//a5cE1oIMW+LCCCVYKSATQ3bqK0sQUlNcvNWzxJcEzrJ6Gh00WsRQqx8i5gDmuRf/t6X
      6dSKOPTiAf73P/xzikKLuyJ0NjnL9abzNN+aZsuePWxZV4YCTA11c621E2ewmB1bN+LUTPpu
      N3Grb5KaTTuoKQmBaTDU3cqNziFK121hfUU+qiIH+Amxki0igHz8zje+i9/vwjQN4nMzjAzH
      CRdGFrhSg+b3TuJas4WtziwBF2BCYqKb926McPilI2TiUUzDYKy7kdbJEK8e3sCpN97A5f8c
      3uhtrt5J8MrLB7n49jF6fEepjsgl8oVYyRYcQKahkU1O0NTaxvF3TnFncJSSTUf5p7/7uYWv
      VFXByGIqNqoqy8E06b7RRtWGPUyODuPyBfA7bFzpnWb7vu3YbE6211fQdGeEgsQAtRv34bS7
      2FFfybs9I1RFqh45ycEwDEzTfHBbHvr/cjMMA3S5odFSMTHRDR1FTnFZ8RaUFaNdl/je93/K
      bDJJsHQtiaFBNv7a7/KFT21bxC5X2bzzBW40N9LcOYfmUdhYW8Lo6CSmrxfdoTJ47So12w8S
      N7K4tXvTV3a3h/RQjJSeImC/d/SRx+MhPhcHQNf1ex/wD1AeHppZHECmYVoegs8U895rKvmz
      8i0ogCbvtnO1bYC/91v/iD07NnLu37cTd9gXvb8d3hDbtm1hTpsk2XOZ9kAeOYEc8uoaqPCp
      VOTauXR3EI9mJ2Xc+8Bmk0ns3gDOlItMNgs4SSQSuL05AGiahqZpH9luRrX2qCXNpqHZ5GZG
      S0VRFGw226NfNGLFWdAnr3bvr/NH/9f/ijrWxn/6N/+aH59r4ebl92jpHFjEOWAZ7ty+zcRc
      CkWzYdcUFEWlpq6S65dbSGezDA2PEsgJsqY0QFNrL7qepOXmXdZUFVFYVMidW7dJZ1M03+xn
      XVWBfAEKscIt6GvX5vRSUbuB8po69EySyfFRmi6epfF8C7W1JQu8O6pGbsjD9WtXuNmfYs++
      fazJc6Cam9mSusHJ48fJLa5hy5oC7EqEyhtX+cU7dyjfuJ/SgA38ddTFWzh5/BSFVVupCssE
      tBAr3aL6/YqiYHO4yS+u4NVfL8cwzUXNAQXyy9h/wA6tcbasK7vfiEbZ2i2Urd3ywLJr6nez
      pv6DD9moWL+NivULLkAIscyWbuJBUZbmuBtXIfu3L341QoiVT84ZFUJYRgJICGEZCSAhhGUk
      gIQQlpEAEkJYRg6/FWIV6B7v5Odt/9Wy9g9Uv8SWkoYlX68EkBCrwER8nPfunLas/drI2qcS
      QDIEE0JYRgJICGEZCSAhhGUkgIQQlpEAEkJYRgJICGEZCSAhhGUkgIQQlpEAEkJYRgJICGEZ
      CSAhhGUkgIQQlpEAEkJYRgJICGEZCSAhhGUkgIQQlpEAEkJYRq6IKJ5rqWwK3cha1LqCy+5C
      VZ7ffsAKDKA4vb1xKioiVhcingM/bvkR1/qvWNK22+7mCy/8PoU5RZa0vxKsqACKTQxwpfkq
      XX0xqjfWc2B7HaqqgGnQd+M8TWNufu3lbWiZBE2XLzIcTRAuWc+OzVWQTXGr+RK9Y7Pk5Fez
      e+tabOoS3CpaPNMmYuPcne61pG2Pw0vGyFjS9kqxgvp+OjeuXaZk0w4atu5mU3Uh3M+PZHSY
      zsEZ0skYBnD3xkXmfDUcffUwDDfTNZ5ivLeVwXSIV145gnemk9vDc5ZujRDiyVZQD0jB63Ex
      MjyM08wlHM4FwDQy3GhpZe3meq40dwNwZyzGphcKUFUH69aWc7l3mIL0KOXVB7FpdjasK+ft
      3hE2FPsxDQPDMN5vJZ1OY5rmAy0bWavmAADTJJFIoMRi1tXwVJhPXuQp0XWdWCyGojy5B5zN
      6stQ0Ye4v+9j9ifv+1QqtQwFfbh0OkVsnu/RnalZDNN48oKsqABSqdt5iLvtVzl+5T2iyWkO
      7K5ntv8mMW8NJUEnvxyppwwd+/3hleZwkE2myOgZPJoGgMPhIJW8t8OMhwLI6XQ+8sZMaRqW
      RZCi4HK6UN1uqyp4Sqwb/qqahtvtnlcAaTZtGSr6EIqCy+nEPY9973A4lqGgD2e3O+ZVJ8Bv
      z43A6gsg0OwuKmuqWZfIJz/VxvX+arrfPI5SUsdbA3G67oxyqbAQj81BXDfIAVKxOZw5FXhS
      HpKpNOBkbm4Wf04+ADbbPDZxHm/Up0lRFVR1BY2GVzkFUFV1XgFk9Syhoqrz2vfz2ZanSVGe
      znt0BQVQmtbLzXgjflKpNCPTGco2utj2j/+Xe3+Oj5N6t42dDWtI9M5yqvEmL+8sp/H6ILs+
      sRtHdI5T15oo9m/icvMAm17cbPmbSwjx0VbQ166DtRvXMj3YS19PN2XbX6YiYP/An73Ub6xB
      AwIV29hb4+JaUxtbDr1G2KXgL6jlhfpibjS3Urv7RYpynJZtiRBiflZQDwjs7gBbt+/ADCao
      LAw++Eebm6ryX41B8yvqyK/44AIKucU17C+uWZZahRCLt6ICCABnmIYNVhchhFgOK2gIJoR4
      3kgACSEss/KGYOJDxdIxhmcGLWs/7I0QdIcsa188eySAVpH20Tb++NQfWtb+P9j+W3yi7tOW
      tS+ePRJAq4hpmmQtPHnxg0eUP8mXTB3DsOY0B+9zfoLnaiIBJJ6Kqqke0NOWtK25A9w7F00O
      RV3pZBJaCGEZCSAhhGUkgIQQlpEAEkJYRgJICGEZCSAhhGUkgIQQlpEAEkJYRg5EBFTFj6rm
      WdO45kWR3SCeU/LOB5yuF3H6K61p3G4HNdeatoWwmAzBhBCWkQASQlhGAkgIYRmZAxJiFfBp
      dta4gk9e8CkJqk8nKiSAhFgFahPTfGngsmXtO9cceSrrlSGYEMIy0gMSz7U6mxO73WNJ2067
      G68lLa8cEkDiubZ3uo+dwy3WNO7047HoqpErhQzBhBCWWYEBlGZqKmZ1EUKIZbCiAsjIJrnV
      fIFjb77D7d5RTNPENA0Gu1o5c/o0N7uHMMx7y472tnH6zFkGJ+P3n20yOdjF2TNn6RmJYlq2
      FUKI+VpBAWRw/b3jxNz51FSvIRuPYpgm/W1XGEx5aNjWQKLvGi13xpjuucL5zgQNW+toOvFz
      RhMGs8OdnG0eYNOWjbSfP85gNGX1BgkhnmAFTUKbJFI6BaEA0USajXUVAJRt2EkZYJoG4aCf
      4XSGm30j7Np3GL/Pye6tpVzvHKEw0UNt/R6COX72NZTzXtcIxdvKwXywL5TJZDAfesxmGGjL
      tZkPMTHJpNOYqScHZiZr7f2usnqW1DzqtJphmKRTaVCefFseQ5//vc6ehkw6TXYer6mRsXjf
      Z7Pzeo9+XCsogDS27NpFY+MF7owoBPJ9VBTmoioKRjZJe3MjHZM2jrxYxJmey3i1e503p9dH
      amSWhJ4k4HQA4PP5mb0zC9x74bLZ7PutqKqK8tAb0+q7RymqMq8Py8N1LzcFxfIa5ktRFea1
      Zy3eHEWZ32tq9es+3zo/rhUUQOAOFHLowB64NkrvpeMYL/w6lf4M7508jla4gU8crsGmKjg1
      G5n7k0F6Oo3N5ceedqDr9+7EmU6ncbrcANjtdux2+0c3rFo3ElVQsNvs4HA8cdkqdH57dngZ
      qnq8tUYSxzzqBLCyn6SqCna7HUV58n7VVRUr+0A2ux1tHq9pxmbDyj6QpmlPZd+voADKMtw/
      gtdnoNndhENu4mmdgZsXMUt2sHdT8ftfVtX5Pm52j/DCxgLaO/qpbNhETnSSlu4eqiJraGvv
      p2btfqu/3JZcyMiyOz1nWftOXW55LJbWCgogBTIzXDrfRsdQms1bt7KzwEnnnQyTk828ebcZ
      gNote6nduJPxSxd56+0bhEvrqQ47ILCRoulL/OIX7xAoqGFjgc/i7RHi+eQMf5jTiCIAAA9T
      SURBVBLM+fUrV1AAaRRW1VFYFMLRGmfftmoA6vYdpe4xSzfsffHBB2wONmx7gQ1PvU4hxEdx
      ZLc+8uPPh1lBAXSfM4+dm+UoHiGeBysvgBQN5/zmuoQQq9wKOhBRCPG8kQASQlhGAkgIYRkJ
      ICGEZSSAhBCWWXm/golngs2+AVRrjpxWbdXM9yQvTSsF+8anW9CHUOxeFJyWtL1SSACJp8Lt
      /gwYFp1l5YzMe1GHcwd48p5iMR/VuB3UHGvaXiFkCCaEsIwEkBDCMjIEE2IVUBQbimLdcE1R
      ns7pCRJAQqwCNlsNvpzfs64A+9ansloZggkhLCMBJISwjASQEMIyMge0imi2Krz+f2JZ+4qj
      wbK2xbNJAmgVUbChqAELC5ALNYmlJUMwIYRlVnUApdNpq0sQQizC6gwg0yA6Mcq5c+eYmJ69
      f/1rk2QsyuDAIDPxlNwbXohVYFUG0GD7VS60dDI7G+X29evMZCEZHebUu+8xPDrEqXdOMh2X
      e1gJsdKtygDq7xtm7dYGKiur2Lt/Lzk2GOi+Tf66nWxr2M7etX5aeiakFyTECrcqA2jDlo3c
      bjxLe2cPE3MpFAVm5+YIBvwAhCNhJsYnLa5SCPEkqzKAfPlVHHn5AAG3wvXTx7g9EkNRFMz7
      N0MzTRPVwvu9CyHmZ1V+SjOZDJrNhS+Qy/b6Ku72jZGbG2J07F6vZ7B/mOJiiy4yJYSYt1V5
      IOLdtotcvzPF8PAA45NV7DtcT0iN0H3qOG/cUcnacvnE5tA8L8ophLDKqgyg6vr9VNfD+ffO
      snff/vuP+jh09LOW1iWE+HhW5RDsl2rXrLO6BCHEIijmL2dun1GGYfDBTTQed6H0yWmIxZex
      qg9QFciPgN3+5GUTSbDy171gDvh981u2fwisems5Hfde0/mYmIJ44unW82FUFfLDq2TfB8Dv
      nd+ydwfnvdrnLoAANE2zqJr5S6fTOBwr/+TPTCaDpmkr/ldHXdcxTRObbeXPOjxP+37l741F
      evjF0XXdoko+nsf21Fag1fT9tVpqfZ72/cr+2hJCPNOe+SHYw0zTRFFW/g/0q6lOYMXXulrq
      hOdr3z93PaCVsGNNI0tW/+hu9mLrNPUsWePpf7coioKiKOh6FuMptGeaBtns4ofNv6wTAEMn
      84TX/5E6DP2J+2ypzGffm6ZJJpt90kJPXmYRHnhNH9e8YZB9wpTHcxdASydF07XWBT0z0d/E
      +c6l/kUjS/uNFn55EYC5Oxdo7IktcRsfrr3lAn0TS/9rkh6b5N3GpqVd6Vgrx2+MfqynzPS3
      cqVjaEnLSMcnuHm7d0HPNTNxTp07D8BQTwdjs8lHF0rNcPzclcWUuChzE71cau78yGWe+Uno
      D5NJzjE+GQXNSV5eGBs6M/EkejJOUteIhLxMTExi9wQIB7zomRQT4xPoip1wJEwiOkRLyw3y
      8kP4Q2H8bhvRyQniGYW8vDB2TWV2dha308bUdILc/FyM+22mJmcwXYurPxWbYWJ6Fs3pIRIO
      kp6bpPXGdXRPmLzcAA7AyKYZHR4Eu5dIbgBVMZmbniQazxDOy8dlV4jPxjBVnWg0hj8Uwe92
      kE3FGZuYQrG5iERysanz640l5qYZzEzjD0XwuRyYepqJiQnSukIoHMHjtBGLzeFyOpkcnySQ
      X4CWTTA2Ponq9BIOBSCbZGx8Ers3SG7gwZ99jey99WUVJ/l5ITRMZmNxFD3FTCxDKJKH26GR
      is8wMTWL5vAQiQTRHvMtracTDA0O4PAEyA34MDJJUoaGx2XHSMWIGQ78bhuZVJyJiWnmJqMY
      zjCYBjNTE8wm0nhycgn63WSScVLpDHNzc7hzwgS8LhRM4rPTTM+lCN7f9gdf1xDjgz3cuDlB
      wOcglJeHx7Gwj2OooBjV7gDTYHpijFhaJycUwa/c621Pjg2TMu3khXOxaQp6JsHY2CSay084
      lINqZJhNZtCTc8TSkF+Qh32e+3y+sukEExNTKE4feSE/mcQcGVNF+/rXv/71JW1plRjoamNs
      Js7UUA/9syplviz/5Y1foNmdDHc2caVjBKfN5HZTK3m1NfRePcPdqE5yZgTdFYHYEDdu9REO
      5+LwBpi9e52r7aMYiTE6hxKUFUc4deIY43d7GU06KAxpvHe2kbSpMDcxSNpfSWWeZ8H197Rf
      ZyqWYrSvgynDR44ap7W1HXcgF6fTgzs7xrtNfXidCnc7b6KFSjEnu3ivuQvVSNDcPkBtVSGN
      P/8p3XNplNQsbbf7Ka0o5erpt4mZdmYmhtH8hfhdTz5sYbz3Jh0jcexGnEtXblJRW01mqp/2
      u+Ok5iZo6xqhrLyEKxdPM9rXTedwnJKSMFfPnmYmqzITjRIM5nDp9CnmdJWhjhayOeUE7Wl6
      R6JUl+bTdO4UQ3Gd+Fgv3RM6FREXb7zxX4mnVVIzo7QPJagszaOv/QZTc0nG7nYwnvFSFH7o
      2KXYCO9c7iHsU+m42YLpLcQx282NUZ3SvBxivY2cG/JQGTJ47933SJoqsxNDZL3FVITgems3
      qUySjhvX8RVXM93VyHs3BnFoOtevNJFbUYMa6+fE2RZUJcPtjl4Ky4poPnuS2azK7NgAtlAZ
      cyPtdA/MEMzx4Q0GcdvnH0CmnuFO/xA1lRV03mgk7oigTLRz4dYwmplkfDZLUcjNtatXwO5i
      cqCDngkoL/Rx9u23SKgORno6mNLdFDrn+NFPT6KoGvHxbnpnvZTn+z/uW/IR6fg0ozM6pXlu
      zp08TdxQGOu9yYQeItn9Lmc7Zp/fHlBJZTXJ7j7ibi/dA31QtZ7c0jVsa9hCok/ncqyUrXUR
      HNFRYhmTTDqDze+huraOoNeFotSQnzdAff0mMJKcvjDBzpdfIdcJ77z9FqnMWpJT46w7/Hmq
      CnIYuH2FYOVmGtYUEu/LcGWRo5Xy6hq67gxguF0MDvSz9eBmigvzWb+hnpAbZjsV6rbtY1uN
      j6FOndGpOUYH7rB5x0uUhlwYb73BcAocrlw27t1DSDFJvvsmyQykMxk8Lj9V6zfgd83jIDkA
      p4/6mgYq8zyEzbe5NZJkW1EJJXNppmIqqalOZlM7IT4FFXv5xPoSYsNtJHw1HN6+BoDEcBvx
      nGr2b1tPNhbmRONtKneVAKDPjTBshnl1xzY0xeDN198gsakIT6ScvXt2ophRTr3VRgYoq6qh
      +04/htvDUH8frCl8pNzqjVvZUl9IrCjA+Y47FJQ9OhsxM9SJo6SeHRuLiPYp3IoDjhxqKwvo
      H53GZUtxd3SOPM3Nus011JWFqMnJcKV3ioLxG9TueZX1ERu3Lp9mYGyWTDqL351DzYaN+Fwa
      ORVVFE76qa/fsNC3wQP0dBpTtREprqYoEoRUlJzCKnY0bAUzzS/ePE5sJEksdzOHtlajJ6Z4
      +/R1NhbUkFe5np07NqGYI7z91hBsKlqSmgBmh3swI7Xs2FaLYtTx+hsn2FzsZMvOfc/rHFCK
      U794F8WVQzg3hN12r7upKMq9E1gV4IFuu0bdzhcocGdpOvcOV7tGHrzYmakTnRjh7Im3OHbs
      LaIJGzrgziujquDe/bxTmQxuj3tpys/O8M47F3D5A+SGcrEpj58c/eUm3N8qkjNjXDxzgmPH
      jtEfS2Kk7y90f6PvTSgq7D7wEm59lvMn3qRtYOZjl+dwaGQyOm2NpxlMKIRyI/g8GoYJeMKs
      ryxAURSMTBq751e9k0wqxUBnM2++eYx3zlzH4fvVwXhGJo3qdHJvZKDiQCFzf9uU+xurAOgz
      HD9+HqcvQG5uLjbtoyeOVc2OaTx+ojadSODyP9gTmOlt4Xz7GIFQLrkB/yPH7DidTjLZLLHZ
      WZrPv8OxY2/S3j+LTbOx48AB3MYs59/5GbeGl/7I+9zqehqq8+hvv8abp6/wQGWKhqoaZBIJ
      HN57Q1vVZkPVdbI8+DoutUw6g8vlurd+1QHKr/bccxtAiYyLivJiSM4STz/p140so8MTFFSu
      Y+fmSibGo4ADxYiTyhpkcVBZVUT1xt0cffUwWzbV4tYe3JG5wQC9nZ2ksxn67w6gG2DoWW7f
      bCMLRId6uDs+O7/yjRhpNUh5SSHpuUmSOoCGw2YSS6bIfsgvHyVlNZSt2cTRo6+yY+tm/M7H
      LZVhaHiainWbaagrYnxkep41GaSzWTLJaS7fnmNtsZtoNElZZSV+u870LydJf5l3gDuvnHjf
      daLJLNGpCRzBIvLD+Rx4+RVe2r+HyuLw+6u3BfJRR7sZiiaJjfcw7Qjw2EGCHietBCgvLSI7
      N0XyQ34ESqfSGHqa9tZW8oorUDWNeDyOnklwu6MHE/BFCui/dYN0NsvwYD/JLMSjUYJF5RSG
      /UxNTt1bmamTSmXQMwnON/WxviJM+dpK8orW8erRV9m9YzNBDwwPz1C5bjPb1+cxNDKDZnOT
      Tc+RzuroS3DwYXR8BNWfz46duzBmxtEBPZsmaxiMdjWTcZcRKKsl2naJubTOSG8nam4ei5yO
      fKJgQREjXbeIJjOM91zFEax9/2/P6RyQg5AnxfnGFlyRCorzcoiEAuiKjUjQj2kaKA4fIa8D
      wzDxBCM49RmuXrrE4JyDXdvrcNrs5PtV3mtswpaTz5rqCoY7m2m52Y0/v5S8oA/TMAiH732I
      nP5cXJlxLl27SU5RBeFIHkG3Rl/vXQpKiolPDjGLl7B/Hm8HzYePcS5eu0WopJb8XD+5wSCR
      UA4tVxuZNbwU5PpQ3UGCbg3TNLG7/ZRVlBEbuM2VljZMXyHlBUEwTHIiudgBw9DJCeahJsa4
      eOkKUSOXnQ0185qEtpGlu+MWnT0jbN67n3yfk7yCAM0XzzOt+6gpKyCUm4dNMQgGQ9g0FdXm
      ojDs4urFRqZSNorLyikJaVxpvETfaIzKmipcdhVTtREOhSktDtN27RI9EwYvHtiFQ1PQUYiE
      goCJoauECooJKJNcuHqTYHEtBbk+coMP30tNYXz4DrfaOglUbmJTVT4OX5DEYDstHQOUVlWT
      E4pQlF+AX4nSeLUVb6SUgvwIJRUVjLdf4dbdaWrX1uLLCWHODtB6q5v+wWGqtuyhPOzBEyqC
      qTtcbmolbQ9QXpSPER/j0qXLTJLP3q1VOJwevMY0jU3t+PML8TnnOdzl3ml2JirhUBDDNPD4
      gvg9Grebr9DaOcDmXXsIeZzoiUlutLQyowTZu30DDoeHigI3ly5eZIZc9m6rw6aCrjqIBHz3
      X0cb4cji54AAVJuTUDiP4lwH1y5dYsIIc3BXHSoGLn+E/x+BSNtfSbH8aAAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='288' name='Weekday Vs Weekend' width='288'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
