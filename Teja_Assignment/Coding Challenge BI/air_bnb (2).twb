<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
        <calculation class='tableau' formula='3.0' />
        <range granularity='1.0' max='10.0' min='1.0' />
      </column>
    </datasource>
    <datasource caption='air_bnb_all_cities' inline='true' name='federated.11vinx40duwgbv1ej636w0oqq2to' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='air_bnb_all_cities' name='textscan.0hkrp1k0n1urqe1acvfmc1lryf5h'>
            <connection class='textscan' directory='C:/Users/TejaKrishnaPulaganti/Downloads' filename='air_bnb_all_cities.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0hkrp1k0n1urqe1acvfmc1lryf5h' name='air_bnb_all_cities.csv' table='[air_bnb_all_cities#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='real' name='realSum' ordinal='0' />
            <column datatype='string' name='room_type' ordinal='1' />
            <column datatype='boolean' name='room_shared' ordinal='2' />
            <column datatype='boolean' name='room_private' ordinal='3' />
            <column datatype='real' name='person_capacity' ordinal='4' />
            <column datatype='boolean' name='host_is_superhost' ordinal='5' />
            <column datatype='integer' name='multi' ordinal='6' />
            <column datatype='integer' name='biz' ordinal='7' />
            <column datatype='real' name='cleanliness_rating' ordinal='8' />
            <column datatype='real' name='guest_satisfaction_overall' ordinal='9' />
            <column datatype='integer' name='bedrooms' ordinal='10' />
            <column datatype='real' name='dist' ordinal='11' />
            <column datatype='real' name='metro_dist' ordinal='12' />
            <column datatype='real' name='attr_index' ordinal='13' />
            <column datatype='real' name='attr_index_norm' ordinal='14' />
            <column datatype='real' name='rest_index' ordinal='15' />
            <column datatype='real' name='rest_index_norm' ordinal='16' />
            <column datatype='real' name='lng' ordinal='17' />
            <column datatype='real' name='lat' ordinal='18' />
            <column datatype='string' name='City' ordinal='19' />
            <column datatype='string' name='day' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0hkrp1k0n1urqe1acvfmc1lryf5h' name='air_bnb_all_cities.csv' table='[air_bnb_all_cities#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='real' name='realSum' ordinal='0' />
            <column datatype='string' name='room_type' ordinal='1' />
            <column datatype='boolean' name='room_shared' ordinal='2' />
            <column datatype='boolean' name='room_private' ordinal='3' />
            <column datatype='real' name='person_capacity' ordinal='4' />
            <column datatype='boolean' name='host_is_superhost' ordinal='5' />
            <column datatype='integer' name='multi' ordinal='6' />
            <column datatype='integer' name='biz' ordinal='7' />
            <column datatype='real' name='cleanliness_rating' ordinal='8' />
            <column datatype='real' name='guest_satisfaction_overall' ordinal='9' />
            <column datatype='integer' name='bedrooms' ordinal='10' />
            <column datatype='real' name='dist' ordinal='11' />
            <column datatype='real' name='metro_dist' ordinal='12' />
            <column datatype='real' name='attr_index' ordinal='13' />
            <column datatype='real' name='attr_index_norm' ordinal='14' />
            <column datatype='real' name='rest_index' ordinal='15' />
            <column datatype='real' name='rest_index_norm' ordinal='16' />
            <column datatype='real' name='lng' ordinal='17' />
            <column datatype='real' name='lat' ordinal='18' />
            <column datatype='string' name='City' ordinal='19' />
            <column datatype='string' name='day' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>realSum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[realSum]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>realSum</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[room_type]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>room_type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_shared</remote-name>
            <remote-type>11</remote-type>
            <local-name>[room_shared]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>room_shared</remote-alias>
            <ordinal>2</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_private</remote-name>
            <remote-type>11</remote-type>
            <local-name>[room_private]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>room_private</remote-alias>
            <ordinal>3</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>person_capacity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[person_capacity]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>person_capacity</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_is_superhost</remote-name>
            <remote-type>11</remote-type>
            <local-name>[host_is_superhost]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>host_is_superhost</remote-alias>
            <ordinal>5</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>multi</remote-name>
            <remote-type>20</remote-type>
            <local-name>[multi]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>multi</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>biz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[biz]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>biz</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cleanliness_rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cleanliness_rating]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>cleanliness_rating</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>guest_satisfaction_overall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[guest_satisfaction_overall]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>guest_satisfaction_overall</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bedrooms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bedrooms]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>bedrooms</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dist]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>dist</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metro_dist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[metro_dist]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>metro_dist</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attr_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[attr_index]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>attr_index</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attr_index_norm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[attr_index_norm]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>attr_index_norm</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rest_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rest_index]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>rest_index</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rest_index_norm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rest_index_norm]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>rest_index_norm</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lng]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>lng</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
          <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
          <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
          <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
          <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
          <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
          <semantic-value key='&quot;paris&quot;' value='48.8566' />
          <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
          <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
          <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
          <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
          <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
          <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
          <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
          <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
          <semantic-value key='&quot;rome&quot;' value='12.4964' />
          <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
        </semantic-values>
      </column>
      <column aggregation='None' datatype='integer' name='[Cleanliness Rating (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[cleanliness_rating]' peg='0' size='1.328' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='air_bnb_all_cities.csv' datatype='table' name='[__tableau_internal_object_id__].[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]' role='measure' type='quantitative' />
      <column caption='Attr Index' datatype='real' name='[attr_index]' role='measure' type='quantitative' />
      <column caption='Attr Index Norm' datatype='real' name='[attr_index_norm]' role='measure' type='quantitative' />
      <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
      <column caption='Biz' datatype='integer' name='[biz]' role='measure' type='quantitative' />
      <column caption='Cleanliness Rating' datatype='real' name='[cleanliness_rating]' role='measure' type='quantitative' />
      <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
      <column caption='Dist' datatype='real' name='[dist]' role='measure' type='quantitative' />
      <column caption='Guest Satisfaction Overall' datatype='real' name='[guest_satisfaction_overall]' role='measure' type='quantitative' />
      <column caption='Host Is Superhost' datatype='boolean' name='[host_is_superhost]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Lng' datatype='real' name='[lng]' role='measure' type='quantitative' />
      <column caption='Metro Dist' datatype='real' name='[metro_dist]' role='measure' type='quantitative' />
      <column caption='Multi' datatype='integer' name='[multi]' role='measure' type='quantitative' />
      <column caption='Person Capacity' datatype='real' name='[person_capacity]' role='measure' type='quantitative' />
      <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
      <column caption='Rest Index' datatype='real' name='[rest_index]' role='measure' type='quantitative' />
      <column caption='Rest Index Norm' datatype='real' name='[rest_index_norm]' role='measure' type='quantitative' />
      <column caption='Room Private' datatype='boolean' name='[room_private]' role='dimension' type='nominal' />
      <column caption='Room Shared' datatype='boolean' name='[room_shared]' role='dimension' type='nominal' />
      <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
      <column-instance column='[cleanliness_rating]' derivation='Avg' name='[avg:cleanliness_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[guest_satisfaction_overall]' derivation='Avg' name='[avg:guest_satisfaction_overall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[metro_dist]' derivation='Avg' name='[avg:metro_dist:qk]' pivot='key' type='quantitative' />
      <column-instance column='[person_capacity]' derivation='Avg' name='[avg:person_capacity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[guest_satisfaction_overall]' derivation='Median' name='[med:guest_satisfaction_overall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[realSum]' derivation='Median' name='[med:realSum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[cleanliness_rating]' derivation='None' name='[none:cleanliness_rating:ok]' pivot='key' type='ordinal' />
      <column-instance column='[day]' derivation='None' name='[none:day:nk]' pivot='key' type='nominal' />
      <column-instance column='[guest_satisfaction_overall]' derivation='None' name='[none:guest_satisfaction_overall:ok]' pivot='key' type='ordinal' />
      <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
      <group caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
        </groupfilter>
      </group>
      <group caption='Action (City,Day)' hidden='true' name='[Action (City,Day)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[day]' />
        </groupfilter>
      </group>
      <group caption='Action (City,Room Type)' hidden='true' name='[Action (City,Room Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[room_type]' />
        </groupfilter>
      </group>
      <group caption='Action (Cleanliness Rating,Guest Satisfaction Overall)' hidden='true' name='[Action (Cleanliness Rating,Guest Satisfaction Overall)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:cleanliness_rating:ok]' />
          <groupfilter function='level-members' level='[none:guest_satisfaction_overall:ok]' />
        </groupfilter>
      </group>
      <group caption='Bottom' name='[City Set 2]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([realSum])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[City]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top city' name='[City Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([realSum])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[City]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Affordable and Expensive' delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[City Set 2]' function='reference' />
          <groupfilter field='[City Set]' function='reference' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Assignments/Coding Challenge BI/air_bnb_all_cities.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/27/2023 06:16:45 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='air_bnb_all_cities' increment-value='%null%' refresh-type='create' rows-inserted='51707' timestamp-start='2023-03-27 06:16:43.942' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>realSum</remote-name>
              <remote-type>5</remote-type>
              <local-name>[realSum]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>realSum</remote-alias>
              <ordinal>0</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7847</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[room_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room_type</remote-alias>
              <ordinal>1</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room_shared</remote-name>
              <remote-type>11</remote-type>
              <local-name>[room_shared]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room_shared</remote-alias>
              <ordinal>2</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room_private</remote-name>
              <remote-type>11</remote-type>
              <local-name>[room_private]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room_private</remote-alias>
              <ordinal>3</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>person_capacity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[person_capacity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>person_capacity</remote-alias>
              <ordinal>4</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>host_is_superhost</remote-name>
              <remote-type>11</remote-type>
              <local-name>[host_is_superhost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>host_is_superhost</remote-alias>
              <ordinal>5</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>multi</remote-name>
              <remote-type>20</remote-type>
              <local-name>[multi]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>multi</remote-alias>
              <ordinal>6</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>biz</remote-name>
              <remote-type>20</remote-type>
              <local-name>[biz]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>biz</remote-alias>
              <ordinal>7</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cleanliness_rating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cleanliness_rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cleanliness_rating</remote-alias>
              <ordinal>8</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>guest_satisfaction_overall</remote-name>
              <remote-type>5</remote-type>
              <local-name>[guest_satisfaction_overall]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>guest_satisfaction_overall</remote-alias>
              <ordinal>9</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>68</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bedrooms</remote-name>
              <remote-type>20</remote-type>
              <local-name>[bedrooms]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bedrooms</remote-alias>
              <ordinal>10</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dist</remote-name>
              <remote-type>5</remote-type>
              <local-name>[dist]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dist</remote-alias>
              <ordinal>11</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>metro_dist</remote-name>
              <remote-type>5</remote-type>
              <local-name>[metro_dist]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>metro_dist</remote-alias>
              <ordinal>12</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attr_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[attr_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attr_index</remote-alias>
              <ordinal>13</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attr_index_norm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[attr_index_norm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attr_index_norm</remote-alias>
              <ordinal>14</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rest_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[rest_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rest_index</remote-alias>
              <ordinal>15</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rest_index_norm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[rest_index_norm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rest_index_norm</remote-alias>
              <ordinal>16</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lng</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lng]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lng</remote-alias>
              <ordinal>17</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15080</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>18</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12775</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>19</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>day</remote-name>
              <remote-type>129</remote-type>
              <local-name>[day]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>day</remote-alias>
              <ordinal>20</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[med:guest_satisfaction_overall:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:metro_dist:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:guest_satisfaction_overall:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:cleanliness_rating:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:person_capacity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[med:realSum:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:room_type:nk]' type='palette'>
            <map to='#00a699'>
              <bucket>&quot;Private room&quot;</bucket>
            </map>
            <map to='#fc642d'>
              <bucket>&quot;Shared room&quot;</bucket>
            </map>
            <map to='#ff5a5f'>
              <bucket>&quot;Entire home/apt&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;amsterdam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;budapest&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;berlin&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;london&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;vienna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;barcelona&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;lisbon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;athens&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;paris&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:day:nk]' type='palette'>
            <map to='#00a699'>
              <bucket>&quot;weekdays&quot;</bucket>
            </map>
            <map to='#ff5a5f'>
              <bucket>&quot;weekends&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
          <calculation class='tableau' formula='3.0' />
          <range granularity='1.0' max='10.0' min='1.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='air_bnb_all_cities.csv' id='air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB'>
            <properties context=''>
              <relation connection='textscan.0hkrp1k0n1urqe1acvfmc1lryf5h' name='air_bnb_all_cities.csv' table='[air_bnb_all_cities#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='real' name='realSum' ordinal='0' />
                  <column datatype='string' name='room_type' ordinal='1' />
                  <column datatype='boolean' name='room_shared' ordinal='2' />
                  <column datatype='boolean' name='room_private' ordinal='3' />
                  <column datatype='real' name='person_capacity' ordinal='4' />
                  <column datatype='boolean' name='host_is_superhost' ordinal='5' />
                  <column datatype='integer' name='multi' ordinal='6' />
                  <column datatype='integer' name='biz' ordinal='7' />
                  <column datatype='real' name='cleanliness_rating' ordinal='8' />
                  <column datatype='real' name='guest_satisfaction_overall' ordinal='9' />
                  <column datatype='integer' name='bedrooms' ordinal='10' />
                  <column datatype='real' name='dist' ordinal='11' />
                  <column datatype='real' name='metro_dist' ordinal='12' />
                  <column datatype='real' name='attr_index' ordinal='13' />
                  <column datatype='real' name='attr_index_norm' ordinal='14' />
                  <column datatype='real' name='rest_index' ordinal='15' />
                  <column datatype='real' name='rest_index_norm' ordinal='16' />
                  <column datatype='real' name='lng' ordinal='17' />
                  <column datatype='real' name='lat' ordinal='18' />
                  <column datatype='string' name='City' ordinal='19' />
                  <column datatype='string' name='day' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_53489D4BA2124924AEED936C0C2D25EC]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Affordable and expensive' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Affordable and expensive' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1' name='[Action2_9E46336B3ABD480ABACE8303FEBE948E]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 1 (2)' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sheet 1 (2)' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3_2D4DD8C6E5ED4FAD8CE3FD80C04C8CB6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Affordable and expensive' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action5_53DD40DF5F39467BB259A58DE8F30D64]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='room type' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action5_D0BA231176684239AD41B37F87DFEB0F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='rating vs price' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action6_DD31BF3757474297BE04F4964E23BAC3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='weekday vs weekend' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action7_D4E8D77E15714FB3B8106FC78548244A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sales drivers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Affordable and expensive'>
      <table>
        <view>
          <datasources>
            <datasource caption='air_bnb_all_cities' name='federated.11vinx40duwgbv1ej636w0oqq2to' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11vinx40duwgbv1ej636w0oqq2to'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
                <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
                <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
                <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
                <semantic-value key='&quot;paris&quot;' value='48.8566' />
                <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
                <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
                <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
                <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
                <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
                <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
                <semantic-value key='&quot;rome&quot;' value='12.4964' />
                <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
              </semantic-values>
            </column>
            <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
            <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action6_4BD8D191E37C4F3DB69430DFDAA18796]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DD31BF3757474297BE04F4964E23BAC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[day]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_53DD40DF5F39467BB259A58DE8F30D64]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[room_type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]' />
          <slices>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' scope='cols' value='Avg Booking Price' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' num-steps='4' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff5a5f</color>
                <color>#f87276</color>
                <color>#f2898c</color>
                <color>#ec9fa1</color>
                <color>#e5b4b5</color>
                <color>#dfc7c7</color>
                <color>#d9d9d9</color>
                <color>#add0cd</color>
                <color>#85c8c2</color>
                <color>#5fbfb8</color>
                <color>#3cb7ad</color>
                <color>#1daea3</color>
                <color>#00a699</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='5' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</rows>
        <cols>[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]</cols>
      </table>
      <simple-id uuid='{610289D0-7D39-4AA7-B205-9CE09BE5815C}' />
    </worksheet>
    <worksheet name='Sales drivers'>
      <table>
        <view>
          <datasources>
            <datasource caption='air_bnb_all_cities' name='federated.11vinx40duwgbv1ej636w0oqq2to' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11vinx40duwgbv1ej636w0oqq2to'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
                <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
                <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
                <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
                <semantic-value key='&quot;paris&quot;' value='48.8566' />
                <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
                <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
                <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
                <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
                <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
                <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
                <semantic-value key='&quot;rome&quot;' value='12.4964' />
                <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
              </semantic-values>
            </column>
            <column-instance column='[bedrooms]' derivation='Avg' name='[avg:bedrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cleanliness_rating]' derivation='Avg' name='[avg:cleanliness_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[guest_satisfaction_overall]' derivation='Avg' name='[avg:guest_satisfaction_overall:qk]' pivot='key' type='quantitative' />
            <column-instance column='[metro_dist]' derivation='Avg' name='[avg:metro_dist:qk]' pivot='key' type='quantitative' />
            <column-instance column='[person_capacity]' derivation='Avg' name='[avg:person_capacity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='Cleanliness Rating' datatype='real' name='[cleanliness_rating]' role='measure' type='quantitative' />
            <column caption='Guest Satisfaction Overall' datatype='real' name='[guest_satisfaction_overall]' role='measure' type='quantitative' />
            <column caption='Metro Dist' datatype='real' name='[metro_dist]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column caption='Person Capacity' datatype='real' name='[person_capacity]' role='measure' type='quantitative' />
            <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:guest_satisfaction_overall:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:metro_dist:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:person_capacity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:cleanliness_rating:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.11vinx40duwgbv1ej636w0oqq2to].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]&quot;</bucket>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:guest_satisfaction_overall:qk]&quot;</bucket>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:metro_dist:qk]&quot;</bucket>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:person_capacity:qk]&quot;</bucket>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:cleanliness_rating:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[:Measure Names]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='width' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[:Measure Names]' value='111' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[Multiple Values]' num-steps='7' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e2e3</color>
                <color>#f3d4d5</color>
                <color>#f5c5c7</color>
                <color>#f6b6b8</color>
                <color>#f8a7aa</color>
                <color>#f9989b</color>
                <color>#fa898c</color>
                <color>#fc797d</color>
                <color>#fd696e</color>
                <color>#ff5a5f</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Multiple Values]' />
              <lod column='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:bedrooms:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</rows>
        <cols>[federated.11vinx40duwgbv1ej636w0oqq2to].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E2B856F2-CF83-4762-AA71-5041E86417A9}' />
    </worksheet>
    <worksheet name='Sheet 1 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='air_bnb_all_cities' name='federated.11vinx40duwgbv1ej636w0oqq2to' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11vinx40duwgbv1ej636w0oqq2to'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
                <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
                <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
                <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
                <semantic-value key='&quot;paris&quot;' value='48.8566' />
                <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
                <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
                <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
                <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
                <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
                <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
                <semantic-value key='&quot;rome&quot;' value='12.4964' />
                <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
              </semantic-values>
            </column>
            <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]' />
          <slices>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' num-steps='4' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff5a5f</color>
                <color>#f87276</color>
                <color>#f2898c</color>
                <color>#ec9fa1</color>
                <color>#e5b4b5</color>
                <color>#dfc7c7</color>
                <color>#d9d9d9</color>
                <color>#add0cd</color>
                <color>#85c8c2</color>
                <color>#5fbfb8</color>
                <color>#3cb7ad</color>
                <color>#1daea3</color>
                <color>#00a699</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='5' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' />
              <text column='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{BA5F3060-262C-419F-B54A-00ED7EDCCBF7}' />
    </worksheet>
    <worksheet name='rating vs price'>
      <table>
        <view>
          <datasources>
            <datasource caption='air_bnb_all_cities' name='federated.11vinx40duwgbv1ej636w0oqq2to' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11vinx40duwgbv1ej636w0oqq2to'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
                <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
                <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
                <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
                <semantic-value key='&quot;paris&quot;' value='48.8566' />
                <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
                <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
                <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
                <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
                <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
                <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
                <semantic-value key='&quot;rome&quot;' value='12.4964' />
                <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
              </semantic-values>
            </column>
            <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
            <column caption='Cleanliness Rating' datatype='real' name='[cleanliness_rating]' role='measure' type='quantitative' />
            <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
            <column caption='Guest Satisfaction Overall' datatype='real' name='[guest_satisfaction_overall]' role='measure' type='quantitative' />
            <column-instance column='[cleanliness_rating]' derivation='None' name='[none:cleanliness_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[guest_satisfaction_overall]' derivation='None' name='[none:guest_satisfaction_overall:qk]' pivot='key' type='quantitative' />
            <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action6_4BD8D191E37C4F3DB69430DFDAA18796]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DD31BF3757474297BE04F4964E23BAC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[day]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_53DD40DF5F39467BB259A58DE8F30D64]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[room_type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]' />
          <slices>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff5a5f' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:cleanliness_rating:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff5a5f' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:guest_satisfaction_overall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff5a5f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]</rows>
        <cols>([federated.11vinx40duwgbv1ej636w0oqq2to].[none:cleanliness_rating:qk] + [federated.11vinx40duwgbv1ej636w0oqq2to].[none:guest_satisfaction_overall:qk])</cols>
      </table>
      <simple-id uuid='{D4E009B4-6C95-4A0A-925B-FA316FD8DBB3}' />
    </worksheet>
    <worksheet name='room type'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Room type across Cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='air_bnb_all_cities' name='federated.11vinx40duwgbv1ej636w0oqq2to' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11vinx40duwgbv1ej636w0oqq2to'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
                <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
                <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
                <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
                <semantic-value key='&quot;paris&quot;' value='48.8566' />
                <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
                <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
                <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
                <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
                <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
                <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
                <semantic-value key='&quot;rome&quot;' value='12.4964' />
                <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
              </semantic-values>
            </column>
            <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
            <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action3_2D4DD8C6E5ED4FAD8CE3FD80C04C8CB6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DD31BF3757474297BE04F4964E23BAC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[day]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='1000.0' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' scope='cols' value='Avg Booking Price' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</rows>
        <cols>[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]</cols>
      </table>
      <simple-id uuid='{52D5F28C-1CE9-4AC5-AFF4-329D8D0A6DF4}' />
    </worksheet>
    <worksheet name='weekday vs weekend'>
      <table>
        <view>
          <datasources>
            <datasource caption='air_bnb_all_cities' name='federated.11vinx40duwgbv1ej636w0oqq2to' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11vinx40duwgbv1ej636w0oqq2to'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
                <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
                <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
                <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
                <semantic-value key='&quot;paris&quot;' value='48.8566' />
                <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
                <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
                <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
                <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
                <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
                <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
                <semantic-value key='&quot;rome&quot;' value='12.4964' />
                <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
              </semantic-values>
            </column>
            <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
            <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[day]' derivation='None' name='[none:day:nk]' pivot='key' type='nominal' />
            <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action6_4BD8D191E37C4F3DB69430DFDAA18796]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_53DD40DF5F39467BB259A58DE8F30D64]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[room_type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]' />
          <slices>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' scope='cols' value='Avg Booking Price' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]</rows>
        <cols>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{15534AFB-F2D8-4FB3-AFAE-DE4252AA815C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
          <calculation class='tableau' formula='3.0' />
          <range granularity='1.0' max='10.0' min='1.0' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='33' param='horz' type-v2='layout-flow' w='98438' x='781' y='1042'>
            <zone h='97916' id='31' type-v2='layout-basic' w='98438' x='781' y='1042'>
              <zone h='32638' id='29' name='Affordable and expensive' w='49217' x='781' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32638' id='58' name='weekday vs weekend' w='49221' x='49998' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32638' id='37' name='rating vs price' w='49217' x='781' y='33680'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32640' id='60' name='Sales drivers' w='98438' x='781' y='66318'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32638' id='62' name='room type' w='49221' x='49998' y='33680'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8854' id='64' is-scaled='1' param='C:/Users/ManojP/Downloads/download.jpg' type-v2='bitmap' w='10449' x='-9277' y='521' />
        <zone h='8724' id='34' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='15625' x='34180' y='19141' />
        <zone h='7552' id='59' name='weekday vs weekend' pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]' type-v2='color' w='13574' x='85156' y='26172' />
        <zone h='11458' id='63' name='room type' pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]' type-v2='color' w='12598' x='84277' y='51563' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='72' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='71' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone fixed-size='68' h='8854' id='64' is-fixed='true' is-scaled='1' param='C:/Users/ManojP/Downloads/download.jpg' type-v2='bitmap' w='10449' x='-9277' y='521'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='243' h='32638' id='29' is-fixed='true' name='Affordable and expensive' w='49217' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='243' h='32638' id='58' is-fixed='true' name='weekday vs weekend' w='49221' x='49998' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7552' id='59' name='weekday vs weekend' pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]' type-v2='color' w='13574' x='85156' y='26172'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8724' id='34' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='15625' x='34180' y='19141'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='242' h='32638' id='37' is-fixed='true' name='rating vs price' w='49217' x='781' y='33680'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='242' h='32638' id='62' is-fixed='true' name='room type' w='49221' x='49998' y='33680'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11458' id='63' name='room type' pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]' type-v2='color' w='12598' x='84277' y='51563'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='243' h='32640' id='60' is-fixed='true' name='Sales drivers' w='98438' x='781' y='66318'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{39102036-2310-4956-85B0-0020466790FD}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Affordable and expensive'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C87D8F2F-1DDA-4C45-A4DD-5669BFB637C1}' />
    </window>
    <window class='worksheet' name='Sheet 1 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0142A82E-7E45-421F-9904-9C8AB74AAC40}' />
    </window>
    <window class='worksheet' maximized='true' name='weekday vs weekend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{796552A2-62AE-4616-B992-718B03B827D1}' />
    </window>
    <window class='worksheet' name='rating vs price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:cleanliness_rating:qk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:guest_satisfaction_overall:qk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_private:nk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_shared:nk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{EAC52C0A-7499-48FA-803B-1D2D4B8ECB1D}' />
    </window>
    <window class='worksheet' name='Sales drivers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Multiple Values]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5A818D8C-227B-4F9E-8C84-1911FE65A48F}' />
    </window>
    <window class='worksheet' name='room type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D46D11B-6D6C-4B87-8389-8CBDF439A15B}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Affordable and expensive' />
        <viewpoint name='Sales drivers'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='rating vs price'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='room type'>
          <highlight>
            <color-one-way>
              <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='weekday vs weekend'>
          <highlight>
            <color-one-way>
              <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='58' />
      <simple-id uuid='{A969553E-227B-4855-A974-3DBB0668D007}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='288' name='Affordable and expensive' width='288'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='288' name='Dashboard 1' width='288'>
      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
    </thumbnail>
    <thumbnail height='246' name='Sales drivers' width='288'>
      iVBORw0KGgoAAAANSUhEUgAAASAAAAD2CAYAAAB2k1oGAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeVzU1f748dfIDAkIBlRC4YaEO4qNKCQIkpCYmddwQy/mvSpflYRSS0kJ
      u2hiCYUaaJlcoyIuLnnBFCNFLyKOGyouP8I9UgNrUDFmkN8fMyCrssw4muf5ePCHM2fenzMI
      b87ymfOWVFRUVCAIgmAArQzdAUEQHl8iAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAi
      AQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAi
      AQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAi
      AQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAi
      AQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAi
      AQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDAiAQmCYDBSQ3dAEIS/
      pqCgoPu2ESMgQdC38wkEyOXIwzMN3ZOHjhgBCbpxM423By9iN4BsCJE7o/A1M3SntDLDkb+V
      WutBE6wcejMs4E0Ch3XD6mH4TSi7SPqqpXyx7Rj5xaWACVbPPs/A0W/whr8rnU0fhk7q1l/v
      HQkGcXPvLrKQYW4upaRkD1kH1fh6PMw/XqUU5+eQGDGRHxQrSI7wwMKQ3VGfIC7gn3x+VlXt
      wVKKf8klLTaUn0khMbCjwbrXHHFxcfdtI6Zggg6oOZi1B5XMnXfXh9AfFXuyDqE2dLdq6Rqc
      gkKh0HxlZ7I1LhhXayhKjeGbM4btW9GWlXx+VkX74Uv5NiOrqo/p38YxL6AfTz/MubwFRAIS
      Wk6dxY87VODmyaCOg/DsC8oduzlao00m4a5y5P9M4kqtl99Mexu5XM4/k6o9o8wladEUfNzl
      yOWueL0+g+itO1kVGEjCeR30WWqKrTyQ96f1By5w5FhRzbdUnEXcjNfxcpUjl7vjM2UpGYW1
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='216' name='Sheet 1 (2)' width='216'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='288' name='rating vs price' width='288'>
      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
      Il0IYZn/D7WI5OeGKdpeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='288' name='room type' width='288'>
      iVBORw0KGgoAAAANSUhEUgAAASAAAAEgCAYAAAAUg66AAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd5Qc133g+2+F7q7O3TM9OSDNIAxyJAASJMEsJgUqW9LK67VWu7a06/Xu
      Pj/b+1bneX1ke5/9nJ/tXfo927JXWRRliaJEEkwgCRAZGKQBMBGTQ+dQ6b4/epAHDEg94NzP
      OcMDdldX3aru+tW9t27dnyKEEEiSJFWAWukCSJI0d8kAJElSxcgAJElSxcgAJElSxcgAJElS
      xcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElS
      xcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElS
      xcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElS
      xcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgAJElSxcgANIdZloUQotLF
      kOYwGYDmMNu2K10EaY6TAUiSpIqRAUiSpIrRK10AqbLE/hfBtipdDGmOkgFojnOfexoll6p0
      MaQ5SgaguW58ELJTlS6FNEfJPiBJkipGBiBJuoLDm70Z3p40yVe6KB9wMgDdSqOH+cmLr/Bm
      12SlSyK9I0HOdMnbLm6li/IBNyf7gJLde3nzwFGM5R9h++LwrduwY5IvFAhYzq3bpvSeuWaJ
      HWem+B9dad5IWuQ1nfbqIB9dXMXnmv00eBSU6WXtUoHvHRrnT/tynCkIvIaXBxcm+PfLI6zw
      nVtKkM+XeOn0OH92KsexnMAI+niwrYp/vSjMioB6RQ3AKhX52Ylxfm/Ex+/fWcWmgPaBPkk/
      yPt2Va5jUSoWUG35GII0rVTgm4fGeSbv5ZObW/jEeBEj5KGaEv+rP8+RuIeqmAcD6Osb4hf3
      FFi5rJa/eqSB+R6FQrHIj4+M8vkdJv/jgRo26IJctsB3jo7xfSvEf7mvnuV+hWI+z3c7J/m/
      Dlj80qoq7gmVQ5BVKvLSyQn+4LTJ/BqNkiVw5sDP89YFICEQgBAuwi3/G0BRVBRVQVGmry5C
      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
      I9wkAXSPq1Qqbq+CuIdJAN3D5NRLuE36gIQQrpHL8EII10gACSFcIwEkhHCNBJAQwjUSQEII
      10gACSFcIwEkhHCNBJAQwjUSQEII10gACSFcIwEkhHCNBJAQwjUSQEII10gACSFcIwEkhHCN
      BJAQwjUSQEII10gACSFcIwEkhHCNBJAQwjUSQEII10gACSFcIwEkhHCNBJAQwjUSQEII10gA
      CSFcIwEkhHCNBJAQwjUSQEII10gACSFcIwEkhHCNBJAQwjUSQEII10gACSFcIwEkhHCNBJAQ
      wjUSQEII10gACSFcIwEkhHCNBJAQwjUSQEII10gACSFcIwEkhHCNBJAQwjUSQEII10gACSFc
      IwEkhHCNBJAQwjUSQEII10gACSFcIwEkhHCNBJAQwjUSQEII10gACSFcIwEkhHCNBJAQwjUS
      QEII10gACSFcIwEkhHCNBJAQwjUSQEII10gACSFcIwEkhHCNBJAQwjUSQEII10gACSFcIwEk
      hHCNBJAQwjUSQEII10gACSFcIwEkhHCNBJAQwjUSQEII1/x/zcjku40w/BoAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='288' name='weekday vs weekend' width='288'>
      iVBORw0KGgoAAAANSUhEUgAAASAAAAEgCAYAAAAUg66AAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dd3gceX7f+XdVdUKjgW50QCYCCYI5g2kYhuQMZ2ZHs6u1JMu6k/b20fPo
      dI9Pa1vS2dI98tm3J9myZD1+rGBJvrv1nu1b7XNreVfWTmAeDoc5k2AAQRIEkYjUjQa6Ebq7
      0v0BkjMMs2iSAArkfF/Pg+GgUIXft6urP/jVr5Ji27aNEEI4QHW6ACHEl5cEkBDCMRJAQgjH
      SAAJIRwjASSEcIwEkBDCMRJAQgjHSAAJIRwjASReanpmjKGRUeR02peTy+kChMiXbVv0tV3m
      hz/6kHjOwzs/9w2qxi/yvTMZ/smvfp2T7/8VBSu+SlN9yOlSRZ4kgMRLY3yghd/7vT9m/Vd/
      gWVBi+zEBNEFTfx3ZSp6qp/jnx7GP1GJP9dASaGBUlhBeYmfscQ9EkYhNWVBp1+CeIwEkHhJ
      2Fz9ZA+lr3+Db/7cmw/HDtqOfp/vnvPxa28Ucu5GF67EXzPStY0tDUMc62/gd371Kxz6/p8w
      3vQtCaA5SAJIvDQS8RFqFlU/deCybMVuvrZ1D8W7f5uvr6tgrO8a7//RD4iPrOPkTZtf/x8r
      Z71eMTUZhBYvjcqqKNeutWDlMW9hWSNrIuPs+fBDlIb1RL2yqc9F0gMSLwmFJbv+DnzrN/nn
      f9BNbdAkuGgX69yf/bwiUsz/9/3voHdt572vv86O3Vv5td/59/zKv/4uqqI4Wbz4AhJA4qXh
      La7h9//iLzm8/xDxnId1S2sJ6xpveV0oisLOX/oN9A/3kPN5UYHqxuXMW7ye1xpjSPzMTYrc
      kEy8iuJ3L/J//rvv4F39s/z6L+7CJQk0J0kAiVfSaKKTC9d6WbNhHUU+6ejPVa9cAFmWharK
      gKMQL4NX7k+DrutomuZ0GUKIPLz0AWRZFtls9uH3tm1jWfkcqBVCOG1GdsEyw8OYgQCFrpnP
      N9u2+fxLME0Tt9v9E5YQQswV0z5YMjbUw+G9H7H38FHi6dz9qTYj/R3c6Oh/cgHbJtFzi0P7
      93HiYgtZY7L3MpHs4eD+fVy82c2DeBlLdHP44P7JafdDR1EUVFV9+CWEeHlM6yfWHOtn39Gr
      LFm6irVrF5FKDoNlcOP8Cc41t3C3d/CJZUb7bnG112Tbrjep8wzx8blbWJlB/mbfBV7b+Qae
      +BXOtA6gp/vYf+wq67buxNN7ntN3ktNZuhDCAdMaQLZpoHkLUABPYZj5NaWguli8bgvbmpbh
      0Z48GSNQ0cjrTYvxaCq+wkIU2yR+5yrz1mzB73bRsHwNie7bxHs6qVy4nGKfm2WvbaLv+o3p
      LF0I4YBpDSBXcQUbGyNcunKR86cvEk9N5LWcZercuX6WY9eG2LR6IRNjY/gL/ABoLi9ZPUN2
      PIfL55lcwB3A1kems3QhhAOmedBEpXz+MtYuWULj/FI+PnQEc4olLDPHpeMf0znm5623dhAq
      cOMrKCCn5+7/3MDtcuP2ebB0Y3IhM4OiFU5v6UKIWTetAZQbG6G9sxvdtPEWBtCULz4cnrh3
      l1TWJnWvlX4q2L5+OT73ZDnRmka6r18kZ5rca28lXFZHpKKc/rttTOgmXVeaCTcsnM7ShRAO
      mNbj5JrHS264leYrV1Diw2zYsg3FyHLh9FH6hycYy5rsiQ+yfvsajhw+xe6fr8XUTcaT3ezb
      2wNAad1y1iypZuvSJIcPHMAfqWLDmmq8ms26hhTHPj6IN1TBxhXl01m6EMIBM3IeUNeFC7B4
      KfP8vqf+3Ej1cnfUz4KKINN9lwRd1+U8ICFeEjMSQJZpgqo6cg+WpwVQSs/RPDw067U8UOMP
      UFMYcKx9IeaqGTlVWZ1j12JdH0my7eCPHWv/d1es458tX+dY+0LMVXLqsBDCMRJAQgjHSAAJ
      IRwjASSEcIwEkBDCMRJAQgjHSAAJIRwjASSEcIwEkBDCMRJAQgjHSAAJIRwjASSEcIwEkBDC
      MRJAQgjHSAAJIRwjASSEcIwEkBDCMRJAQgjHSAAJIRwjASSEcIwEkBDCMRJAQgjHSAAJIRwj
      ASSEcIwEkBDCMRJAQgjHSAAJIRwzIwE00tnJYC43E79aCPEKcU3rb7N1Ws6fpqWlnVwwyLJl
      m1ixIMbESJzLF84xWjSfN5sWPbqImaP5zFG6k1m0gjDbt6zH71FoOfsp7YPj4C5ky7atBL02
      LRdO0t4/iqX62L7rdYo90oET4mU2rZ9gffgeN0fcbGlaz9Y3dtJQFQLLpH9giHl19SiW8cQy
      qd4b3DPKeOedd1gc1mlu6yM3eJOWkWLefucrrF9QzPnLt0n3t3E37Wf3O2+zdVGAExfvTmfp
      QggHTGsPyOUP4kpdoF2D6ro6CnweAOoWLiKX7KI1nnpimUR/LxV1W9FUlXnzqmm+MshApp/q
      hq1oqkKorIaxtqsMD3gorarHraqE6hrJXDoHzMe2bQzjs2DL5XJkMplH2hgfn5jOl/nMsrkc
      6XTa0RqEmIumNYAUb4h3v/oVTu39gKN7eli4bCNNi6p+4jKmYaBpkx0xVdMwDRPdMNDUyWmK
      omKaJqZhwf35UFzY9tPHmNxuNx6P55Fp/uz4C76yF+P1eCgqKnK0BiHmomndBbNtGzQv1ZXz
      2frOO3RdOY0+xTJFwRDp1GTvYDSdIlBcRDgcZmRkBAA9O4rPF6Aw6CczOo4NWONDqAUxABRF
      we12P/xSFGU6X5IQYgZNaw8omxrkwvU2lJEUqge0YAUuyyQR7yedGGBkaIyenj4iZTFunTlM
      bNUbhOc1cuHjc7T5FtNxo4tF618nWFzB2Acf01a8mv7b16hbvI1wxGD00EluBRQGb15m0bo3
      prN0IYQDprUH5AvGWNFYj56dIGv62b1zI9g26ZEkKd3NgooQicQwufF+7gx5iPrBUxhlx/Ym
      MqPjLGrawryIH9xFvP3WdrLpNFXLNrGoqgjNV8KO1zdjTqSpXr2VRTH/dJYuhHDA9B6GR6Eo
      Us6S5ctRqmoocKmASt3CZY/MZWVH2fnGa7ju7y75gzGWBWOPzOMpLGHp8pJHpnkDJSxZ9ug0
      IcTLa5oDaFJsQcNP/LnqDVA8Ew0LIV4qciafEMIxEkBCCMdIAAkhHCMBJIRwjASQEMIxEkBC
      CMdIAAkhHCMBJIRwjASQEMIxEkBCCMdIAAkhHCMBJIRwjASQEMIxEkBCCMdIAAkhHCMBJIRw
      jASQEMIxEkBCCMdIAAkhHCMBJIRwjASQEMIxEkBCCMdIAAkhHCMBJIRwjASQEMIxEkBCCMdI
      AAkhHCMBJIRwjASQEMIxEkBCCMdIAAkhHCMBJIRwjCMBlEzEsWwnWhZCzCWzG0C2Sfu183zw
      wQecvNSKYdtgW/S3X+fAvn1cbOnAuJ9ME8keDu7fx8Wb3TzIqrFEN4cP7p+cZkuCCfGym9UA
      6mg+wd1skLVrVlFTDOkcDHdd5ezdLDvefJPC9G1OtnRjZwb5m30XeG3nG3jiVzjTOoCe7mP/
      saus27oTT+95Tt9JzmbpQogZ4JrNxvzBMMbdfuKqRc2iFQQ8Cil3AV4lQSKRIGO5CPjc9N+8
      TO26bfjdLhauWMu+Uzfp111ULlpBsc/Nste28KOPmmHBDmzbRtf1h21YloVlWY+0+/mfO8Ew
      TbLZrKM1CDEXzWoAxeqWsS2SYO+HH/HpgRQrt75JpKAQt9lFe1sbmQmTmkIfuWQOX8gLgKp5
      sCwdU1dwFbgnf5Hbh2J+9oFW1Uc7ch6P55Hv3W73zL6wKbg0Da/X62gNQsxFsxpAlmniDUSo
      qq1n+YIQ+y7fpVFrJbr0LZZX+DBTXXxwspXXF8e4EY9DzTyy4yP4CoIESlx0DKWwKcVMDaAV
      lQGgKAou12cvw+nejhAif7MaQPduX+L2oE7iXjdjqWEaV+6g3NA5cfEExkCE9GAP5bWrCFaH
      Ua7s55ySYLi/h8Z1OykJmlitRzl7fpThe52s3PrWbJYuxIwayEwwrOccaVsF5vkDeDVt1tue
      1QCqWriKwsgQZ9NxlmzYQWmoEFjGzmAlw+kJqmvqCYeKUBSFnbvfZCA+TP38hYSDfhRgy47X
      iSdGWNCwkHCx7NKIV8eftF7hO203HGm70OXmx6+/zfJgeNbbntUAUlQXJdFSFi1aQjQUQFEm
      pxcWhyksfqwwbyGVVYWPTHN7C6mofHSaEK+CtKEzkM040nbANDAeO3AzW2Y1gB6onb/AiWaF
      EHOMXIohhHCMBJAQwjESQEIIx0gACSEcIwEkhHCMBJAQwjESQEIIx+R3HpBtcPbAD9lz/Drm
      /UmFNav5zV/+Oi5VmbnqhBCvtLwCyBgb4gc//DFbf/G3WTWvCADNF0CT7BFCvIC8AshVUMyq
      xgWYikYgEABAccm1WGLue7+ng7RDd0go8Xh4s7watyojHV8krwCyTYOx9CDv/1//lk9CBQAE
      5m/g9/7hL+Ga/QtohcjbP754ipvpEUfaXh2KsC1WIQH0E+QVQJaRpSdl809+99+wvj440zUJ
      Ib4k8gogxe2jNuxj30fvk1xYCoAnVMn2pmWoMggthHhO+R0Fs6Bu5UY8wzp9fX0AeE0/8lwK
      IcSLyG/nVIGHN+95MEmRno8Q4sXk1wNSNEoipVheA4C2M3u4MRbhZ2eyMiHEKy+/MSCXl7Wb
      d/DgWYBNVfC/fO8alv0uchBMCPG88jsKlk3zw+9/l/bByUfhpPrbKYxuenyvTAghnkleAaS6
      C9iw/W2WZiYvxFBcXurq58tlGEKIFzLlILRpTHD9ynWitYtZ3FBDoqOFM+eaGZ5w5hEiQohX
      x5QBlL57mn/55z/CUixO/s3/zQ+OdaANXebP/vMeTFsOxAshnt+UATQ2eA+toobC7CDvf9zM
      V3/hF/jpt3fQ3nYd05kneQghXhFTBlCobhmuO6f5zv/zXRL+RjY0VjDQd4/iojAyBCSEeBFT
      BpC/fDn/7B9/g8JwI//0d/4B4QKVcQJ84+99DU0OgwkhXsCUR8EURWP+6m3MX/3ZtFWvf30m
      axJCfEnIfQKEEI75iT0g27Y4ue+vuT2QfeJn3th8fu7tLWgyECSEeE5T7IIpBCNllKtPnvPj
      CYWQ6BFCvIifGECKorBs/Q6WAfpEiputtxjXJ4+9uwKFSAIJIV5EfrdkNcb5/p/9S850jmG5
      A/hGO2Hp1/mjRXVyKF4I8dzyCiBzYpSrXYP80jf/Pp0phW2hHv5wf3KmaxNCvOLyCiDNV0Bp
      YRGjuBm49CmfBEYZjHuRKzGEEC8iz3tCF/H3/9f/jZwWYFVE4eCJFv6P3/opXM/5YDDTNFFV
      TW7nIcSXXJ7nAdkoVo5P/vZ7/OBIK0vrS7h15x7PfFNo2yYzlub8mVMMpcex73ehLFNnZDhJ
      ciSFYU0Ocpt6luTQEOnx7MNmTD1LMnl/mnS/hHjp5TcInRvju//290lXbafUnUS1ffzXH+9h
      94ZG3M/QC0rea+VkcxfZ8WFG0hnWvr6LEleWSyePksaPR4F5S1dTXaxyZP9ePOEy0ok4Sze9
      ybygyfHDn0JhCemBPpbvfJfaUH4PR3SjUOrgIbtCW7p6QjxNfndE1CfoGZ7gq//DbjI392Po
      Otncs98PqK+zh3nLm3ANd9KwbCUuBVK9dxjxzGPHhkUPIyLdcZZc6Wp2ra9jdPAOx6/fIFCj
      YoYb2NHUiDF8i4/OtVL75sq82l06NsHRs63PXO90iYRrYYVjzQsxZ+U3CF1Qwruvr+f//eNv
      g5HGyGm89QvfeuazoGsWLuT4hfNMZDKU1DRSVlxAoqed5FAhB/e1k7M1Vm/YghUfJFq2HACf
      v4TMRAejw16KS8pRAHeoHCt1AliJbdtY1mf3BTFN85HvAVzjEzT2x5+p1ulkpEfJZp88m1zM
      PCd31S3bIqfnyFpT37fGdPjeNrquO7KN5vdUDNXFtr/zKzRu6mYolcFfHCZYVICCzbOcjVgY
      rWHX61GOHDrA9eN7GVqzG68NZXVL2NQYIzN4k0MXWlhZovDZITb7qY8AUhT1c///2c81TcPt
      dj/2Kh/7fpa5NA2XN7/dRTG9nHx8lKqoeNwevI9vj0+hac5elul2u/E6sI1O+apty+Dikb/l
      T/70zznXNsLCxUtwDV/nX/zxf8J4xtA2dB3V46e4JMKWDYu52dpNtKKadCKBpir4/IVgGEQr
      K+nr6QFgIh2nwB8hFAkyHE9gA7l4N1q4GpjcwFRVffglhHh5TNkDGrt3gT/8iw/4lW/9Inu+
      9+d0ta7kzJlb/M+/889xPePnvf/OZc7e6GWwv4fu3nLWv/FTFAcsYu2f8OMP2rF0neWbd1JY
      Vkj06vu8/+FNcrrNtjffodhvUnTrEB98cJfMhM7O937qeV+zEGKOmDKAhu624lu2hTe37cBq
      PcC/P9XLH/3Bv2JBtPCZG6ta1ETVIjh78hirN27FfT/A1m1/m3WPzbtp9+P3HHKxYde7z9ym
      EGLuyqsPk7x7jR/96Eeca+khEi3h8qf7+OCTc5jW8w3w1dYv4DnPYRRCvEKm7AGVLNjIN9+b
      7O0s3vI1Ft+f/iJje6XlFc+/sBDilTFlABVVNPIzP9M4G7UIIb5k5LCREMIxzxVAxmics82t
      WHI9lhDiBTxXAOmpXg4cv0AeJ3gKIcQXyu9M6Mf4KpbxW7+6FIdP3hRCvOTyvBh1jI/++nu0
      9o2hKgqWZYLiIlhWz8/97HuEfNpM1ymEeAXl1YdRbJOWq1epWLSe7du3szBs0jnqxmg7wL/5
      q49nukYhxCsqrwCy9ByJVJqKukbWrlvHxjXLGEim+KndW2hra5vpGoUQr6j8bsfhD/Hejg38
      xz/9XY5Wl9PXfpv1u3+ZeLyFJQsbZrpGIcQrKr87IqKx+eu/Qt26duIjE3gDYRrqq8mMLOUf
      eIMzXaMQ4hWV3yD0xDB/+cf/GspXsnH9BpbUVePWVNzh0pmuTwjxCstrDEgtCPKN/+kfsWF+
      kJMH/prf/vV/xJ/+4OBzX4wqhBCQ71EwRSUYKWPZqjUsqq/GpQ/T3NIuzwUTQryQPJ+MOsxf
      /ME/pTlZxPZt2/mN3/9LKiMBeTS8EOKF5PdgQk+AX/6tP6Kw0A+2xcRYmt7+QcpLo6jydEEh
      xHPKL4AUBWMixZVrZ/nk48Pc6uynaPEOfvdbP88zPhhDCCEemjKAUl2X+bP/8F8Zz+oUlS/A
      HLxD3Rv/kN/8mXWOPnFACPHym3IQerT/DqevdbJ0827+3t/9GZbURPB4PRI+QogXNmUPqGzl
      2/zZv1rMxdPH+avvHOHa+atERo5xcWEJqxurJYiEEM9tygDSPH5qG5ZQ27CY93JZkokBms+e
      4NjpC6xoqMYlF8ILIZ7TM9wPSMHl8RGrqOGNr9Ww07Je6Mb0QgjxXDckA+QppEKIFyYpIoRw
      jASQEMIxEkBCCMdIAAkhHCMBJIRwjASQEMIxEkBCCMdIAAkhHCMBJIRwjASQEMIxjgRQ1912
      DMuJloUQc8lzXwv2PHJjCc6euUhbRxfRyi627txGsXvyitbBjqscPtfOO+99lWKvze3LJ7l1
      bwStIMTmzRsp8ljcvnKeWz1DqJ5itmzfTMAtHTghZtNAZoKzicFp+32zGkB3rzXjq1lBUzRK
      dU093vv5YWSGaWnrp8BlYligJ25zudfFT7/9NoO3z3P+yh3W10BrHHa/9TYjbac5cbmTt5rq
      ZrN8Ib70ziYGee/TvdP2+2Y1gIpDRdzq6KAs5KKgKIhbBWyL9mvNRBauwLpyCoDBrnaqF72G
      S1WJVtZzruM6Q14PZdV1eDSVWMNixn98CZ4SQJZlkcvlHpmmGDruWXh9X8Q0TczHahKzw3bw
      2VG2baPrOrk8ajBNZ8ckDMN44nPz1PlMY1rbndUAKlu4lteCXez5cD/dvUPsfPMNPGM93Bn1
      s3ttiMErk/Ppeg6XNlmaomoYpoGpqyiF97tMqgfbygCTb7JhfLZSFEXB7X4sblyz+jKfoKoa
      6uM1idnh4E2rFEXB5Xbhdk393jt9exuX5nryc/MUmja9dyCc5U+mQqi0loVLlrC0roiDp1op
      Gz3LYKaEfXv7aL91m3TheTaUhkiPpgEfem4cn9ePv9hD73gGGyA7jOKNTP7GxwJH1/Wn3CbW
      2TunKQqOfhC+zJxe6wpKXrctdnzzUMivzmleo7MaQN2tF0nYIdKjo7S1pSmv2sjGhm+wCYAc
      n9gWKzesI6yNcOL9T7gX2UxPy2XmLdhCOGZw7tAZuiI++q6ep2HtztksXYgZtc6w+e8zzuyG
      +dwWJaYzu6qzGkBVDcsw2m5xYzBOxZbdrKgp+dxPNZasXkuhB9CCvPvWa1y9cZfQgvU0zAui
      ADu3N3HjVgclizfTUB6YzdKFmFHfvHGXbx485UzjPi9sewuis9/0rAaQ6vJSv2g5WcOiYV7Z
      Y91OjbLK6offeYtirFsfe2T5guIYa9Y9Ok0I8fJyZHR28bKVTjQrhJhjnD08JMQMa1Q0vIoz
      z45qQJVrnaYgASRead8/0YzVP+BI2+q8agp2fgXkFIwvJAEkXmlFmSxMZJxpPCsnn05FAkg8
      s3HD4PDAPcfar/UHWB4KO9a+mD4SQOKZ9WXGee/I9F0P9Kx+beFS/l3TVsfaF9NHxsiEEI6R
      ABJCOEYCSAjhGAkgIYRjJICEEI6RABJCOEYCSAjhGAkgIYRjJICEEI6RM6HnmJ8/dpDxab7x
      d76WFof4w9Ub87o1pxDTQQJojtnf182I7sxFjMO5rCPtii8v2QUTQjhGAkgI4RgJICGEYySA
      hBCOkQASQjhGAkgI4RgJICGEYySAhBCOkQASQjhGAkgI4RgJICGEYySAhBCOkQASQjhGAkgI
      4RgJICGEYySAhBCOcSSARoaTWLYTLQsh5pLZDSDbpOvWFfbt2cOF63cwbRtsm2TfXY5/+ikX
      rt0mZ04mU2akj+NHP+Vaex8Psmp8uI+Tx45y7U4vti0JJsTLblZvydp17Qw3x0MsXLiAYnWC
      VA7cQ7e41Jll7Zq1DLVd4MhFeHNlmL/de5rdX9lFx6VPuWBtYlW5xYEjF9i8fSs9Fz7mgmsn
      62qCs1m+EF96b8WHGd57etp+36wGUGYiQ7CkBE8mR82iZbhVoKKRnRWAbaNGw7R0ZIi3XaFi
      1VbCxUX4V6/l8NlWBg0XZQ0rKS0ppnT7Jv7b3uusq9n81Hae7B3ZOHmbddt+8J+5z8aGqUqd
      Ay/lWXrATr33k+vSzvu9d65O8q7TZVkEDXPa2p7VAJq/solzZ85yvq0bsyDC0vlVuFQF2zLo
      abvK2ev9bN+9k9Fr+yksK5ws0OUjo2fIjnlwhzyTv8hdhK0PA5MbomF89hQJ0zSf2DgVw8A9
      Oy/xqSzLxNT1POd27tNt2zaGPvUTOT6/vp1gWRZ6nuvT7WBY2vb9dZVHrZploc1CTU9lg2Ea
      2HnUqRrmtIbGrAaQ5i1i47ZdqOphlP7LnMi52bYozNXTR+i1wrz97m78bhXd60M3dMCHZZm4
      XW5cXjf2g+S1sihqAQCKouB2Pxovj3+Py8n4AU3T0DyePOd2rq/2YF1O9VgeV87Zh6moqoon
      3/XpYNdXVRQ8bjfkU6vq3AFpRQG3K886XdP73s/qljQ80IPhKwHVRUVZjJ7BCVJ9t+jMhnln
      x1q0+xtLrLaBY8eb0Ws3M9B5m1C0hki5zeWL7WTml5JsvUZwfsNsli4+x4VCjYNncJTY8tyy
      V8WsBpCCyfVzJ7h5u42UsYatG2uY6LzA2HAv+/f2A1Bat5w1S2rZUB/n0IF9eItL2bS+hgKX
      xYrqJEcOHsBVGOW116pms3TxOZXZHEdPXHWs/YAWhPWONS+m0awGULC0hu27aigo8LF64wbc
      KgQamvj5p3RmapY0UbPk81M0ahavoWbxbFUrvojLtKgZGnaugPGMc22LaeVIP3rl2vW4pBct
      xJeeI6OJXq/XiWaFEHOMXAsmhHCMBJAQwjESQEIIx0gACSEc4+wpreIJ/3tijGw260jb1WrA
      kXbFl5cE0BzzG+euwviEM403OtSu+NKSXTAhhGMkgIQQjpEAEkI4RgJICOEYCSAhhGMkgIQQ
      jpEAEkI4RgJICOEYCSAhhGMkgIQQjpEAEkI4RgJICOEYCSAhhGMkgIQQjpEAEkI4RgJICOEY
      CSAhhGMkgIQQjpEAEkI4Zg4HkI2ey2E5XYYQYsbM2QDKjI5w/vhxugaH0E0bAD07Ru+9eyRG
      xrBt2+EKhRAvak4GkJHqZu/hMwyn0nTevkFPYhQrl+LY4SN09Q5w/sgB7gxlnC5TCPGC5uRj
      eUb7O/DPW8Z8JUHlyhUUAIn2y6ixRtava8BcWMyHp1pZ8NZqp0sVQryAOdkDKq5diXfgMpdu
      3KKrLwmKwtjIGIFQMQrgKi7FGu13ukwhxAuakwGkeorY/uZuqsLFJO9e5NilNhRVhYfjPhaK
      MidLF0I8gzn5KTZ0HVtx4SsIsGTFKobjPYSiIYYG49hAdqATV7TG6TKFEC9oTo4Bjcfv8smZ
      awzeG+BuMsGSNVsorgwQbfuYDz7oIJu1efOrX3G6TCHEC5qTAVRcsZCv/XQDF4+dYtHWzfjv
      T1+z/W3WOFqZEGI6zcldsAdqFy3E43QRQogZo9gv+Rl9tm1jWZ+dL22aJoqiPDrT2DjcvDXL
      lX1ORTmUl+U3b/NVMM2ZreeLBAphYcPU82VzcL1l5uv5IrEoVFflN2/LDchkZ7aeL1JQAI0N
      oObxd767BwbjM1/T02jq5PteUDD1vKkUtLVPW9OvZAC53e4nQ2iO0XUdTdNQ89k4HWRZFoqi
      zPn1aRgGqqq+FOvTsixcrjk5+vGIXC4345+lub8WpqAoCpqmPfzeMAwHq8nfS577c45t2y/F
      On1Z6oTZ2Ubn9p8LIcQr7aXfBXvcg5cz13cZpM7pJXVOv9mo9ZXrAc2F8QrbttGn2BV80Tpt
      256V3c3P16nr+jMvbxg6s/Enbqr1+WLry0bXp2ddz4XtM1+zUesrF0DTx6a79ZXaKxkAAAsD
      SURBVBKD48+xqGVw+MiRaa8ocfcKncnJEDAnhvnk9IVpb+MnOXT48DMvc/74IVK56azCoqPl
      EsmJZ1zKGOHIkXPP2eYYn3x86jmXdUKGG9duojt0MPVZvPSD0F/EtgySiTgTOZvicISiAg/j
      46PYpsFIapziSAxzPMm4rhCNRnGrNqlkgvSETiAUoVDLcvP6ZfxWDCtaSCwWQh9PkUimCZTE
      KPZ7yGVGsVQfE6kk3uISClwwFI+T0U2yxov92beMLInEEDlLJRyJ4FV0Om5eIREJ4KoMEAm6
      wLYYGRpkLGsTjUXxuFSM7BgDiWEKisKEigowMhPolsVoagQ8AWIlRWBbJOMDTJgKJeEIfq87
      77pSQwOMZm3C0Sg+t8b4WBpvQRGaCiMjIwSDQWzbIpVMMJoxGMtO9hyM3DjxeBJb9RCJRfGo
      FqOjE+SyY2QNjVhpBJeqYBk54vE4iidApKQIFZvhRJyxrEFxSRQvY9y4doWoGmNeNEA0Enzm
      v6KWkSMRT2BpPqKREJqqkE6nwMyRnjAfvrYH8+lkePB2mnqWRCIBLj+RcBBNNUmnspj66OS2
      FIvh0aav1zCRTmMqJqnUOEUlUYoKPJh6lqHEEDlLIRKL4XOrjKfHcBd4GE6mCIVLmFdTiaaC
      pWcYGExga14i0TAebWb6HLnMOJbqJpMaxl1Ugt9lMTgYx1J9xGIlaEy+34Y+wXgOopFihhMJ
      tG9/+9vfnpGKHGamB2hu60GfSNFyo43y2lpaTuyhtTeDZqU58vFRTM3LcG87cd1PkTnAyct3
      UBWD/uQEpUUuWq5exfRHKHC7CLgzfHLkLLYK15uvUVa/gMTNE5xv7aW9o4+y6kq6mk9ydyiD
      pU9wLz7K8sV5nFPzBdIDndzuGSKTGuBGe4LqihB3WpoZIUihSyEUKuDSmVPkFA/jg510pF3M
      i3g4tO8gpubmbut1vJEaxjovc/j0DTS3xp3mSxTWNjLRcZ7z7SmUXIqU7qG0JJBXTbcun2DU
      8jM+3MuVW/3U11XTfPowReUN+FzwwZ6PWLp4Mb03L3DpThzV1untH6R+4RKGe27RmxglFe/i
      zmCOuqibD9/fj+H2kuq7w624SV15iMsnDtE7apPous2oVox3tINT1++hkWUwlSNaCNeuXkcN
      RPC5vYRCgbwCyLYy3O2IU19XysXjnzIwbjLSd4eelIuq0hAf/Zf/wDgBJkZ6uTOQpa48yMUT
      k/OZmTT9IxaLF5Rx7tgnJDKQ7L5NX8ZLRVTnh//xQ2y/j/RAJ/fGXFSXBp/7fX9cy+E9XE+b
      qJkUV67cpKy2jkyii7v3EkyMxmm+PcjCulIuHjzC3WQ33QMZqivDnD9+lvK6Oq6ePEQipzI+
      nABvkGChd9pq+7x7N89x/no7d+72Equq5ObpIwxkIDXQQceQybyom4/+2x6yLg8jnS0cv9qB
      x6W9uj0graiU+eVjDAyPYU3ESaQM8IVYu3wNsSIvvQNJNq9fS3qgnas9aSy/iaVolJTVUFUa
      RlNtaitjBBavZEEJdF4+QemiNaxZUMqI/yiX20eoyeXIuMv4yutLcOtxLqT8vLFzHZpt0B//
      9IXqD8SqqRhvZ3hMYbzrDhllLXVVpRRVLGPZPB/GeJLIvEY2rV+HMtHHgTMDpHv6UaqbWLem
      iuGeFq62dVFf4GbJmiaW1cXoV/vpHbYpzWVQXCEq6uone0R5UgJlbGpaDbbJxU/30Zd+clzE
      NrPc6Bxh665dFGgKE8l7AJTPq2M81844fm73dMOKUoKxWtasWYXbNtmz7yCGHuFe2s+7767F
      Svdy4HwnpbUatqoRqainMlaCqhjUVMQoX7KSecXPvl6z6QRJguxavxbV1tm39wDZJfMIlNXz
      2sZ12BNJ9p69TS7ZTdJdyc6mpajKKH19l8iMDpJWYuxqWgPmOAf3HyPTsIZY7RI2Nq0hmxrg
      1LVOYDovlC5k1Ya1lCtQ4jlJZ2+KZVVVxMZ1RsZdDPS3AavI5UYoKNvOtvpyFOWzm/Vlcjq+
      iJ/5tYtnLHwAMDKMq2HefWclnmwvZ80Y765bjWLlOLznMKNLYgTL6li7djXuhJ9ku4c1q+te
      3TGg7ssnuBHPURKOEAz4sG0LUHjYOX6sl1xcuZCmJfMYaL/GB4dOPXEv6mx2jJYLx9m7Zw8n
      bybwawaqx0fDgnrcqgK5DHZBEZo6Dd1v2+LaqaP0ZzRKwlEKC9SnD+Qq91/P/SZzExPcbTnL
      nj17OHHxFi6v6+F8k/9M/lu+aCNLK33cbj7Fp+daeeahAkXF5VIwzCeLsi0L3eXG98huiMnx
      Qx9jeAJEwmE8Lu3RhRQNVZ3spQy032Lvnj3sP3YBVVEJ1i5nbUMZ925f5qNPzr7wPcItU8fl
      9k5u+IoLTbWwLZsHK1G5/5XLTOALFPL5t9MydVwu3+Q8mhdNyWHZ9sP1C8oT29X0UXC5PVim
      ztXTRxnMapSUhB/uPnsLojTUl/P4mHHTltcp0jKcP3aI5raBmSoOXAU0LKif3P3UsyjegslB
      bFXFq9jkPrepKEyuMoVXeBA6PZSivK6ecKGb5MjolPOPjcQx3CWsXb8BbXwIAwW/38dIKo1p
      GJRWVROrmM8bb73NaxvXUh56cIns/Xe8MIIycIvB0RxjQ/eIpyYHi/s7bjGYykA2xfVbnTzl
      M/sUFql0lnl1tRRqBqnRyUsJCgMBksPDWIbx1A9iqGoBkVCEXbvfZvtrG6iKPa2LYJPs76Mg
      Vsv6puVkE0P5B5BpkDMtRuOddAz7KA+5sU2TrK6T7G2ndyiL4vIQ1FO0DYySSQ3SOzQGmKSz
      UFdTjcsYZTRzf1xIz2KYFkNdV7C8FbjcUarrYmzY/gZvvL6VhXXljCUGwB+jacNGSMcxUfH5
      3KRHxzANg2cdafMFSsgmuuhPZxjpbSWnleFxP/kx8IdLSbTfJJXRSfZ0MqKDrzDKePIOibEc
      Qx3XyRVU43PP9BEtg2zGIDeepKVtkKryIKNjOapraghoOYbHPneZyVNKudfbT/X8paxeWs9Q
      YgYv9fh820XlqAOtDKazpAY6SbiDhLSnL/bKjgGVVJRy+9xJetI2C+bXECqJ4HVBUbAEj0vF
      siwikQjYNqrbRzhUSHvLJZpv3GXxuo1EAwUUR0rpunqanmGL2sZGAkaCs+cuMpT1sKC+Ek2x
      8QRCBLwaKG6qK4JcOnOauFFIfXWUWCTMUH83dkGYYleO9r4RKsuiTNlJUhSi0SIunzpFWimm
      vjpGSThGcaySkTvnabk7THVtBZqiEQ4FwbaxcBMpr6SsIMup0+cYGLWoq5uHR1Pw+IsIFHiw
      bQtXIELIZ3H1/Blu9aRZtWE1xT53Xn+4PUzQfLmZ7qTBxs0bKfJqBAM+Lp07x6gSpK4qTGV5
      OaUVZbQ3n6UjaVBTXUE0Wk5FSOXEqQsoxZVUl5cQCxZw9fIV7vV1kzSK2bJ+KS6Xi8rSEJfO
      nubOvSSVNXWUFHm4feUCV1o7Wb5hM2G/j1AkQlvzaQbGVCrKwnn+FbWxbY1ILEZVWYjrF87S
      M+pm86ZVeN0atmUSiUQBMBWNWKyMihIX586cI+OLUB0tIVZaSlVZkCvnztCf87Np/Qp8LgXL
      dBGJFoENqC5Kgs+xb/gF+m/f4FZ/D91dQyxdv4nS4gIiJX4unz1LSg0xvzpKaTSKbdoUR8M8
      OJxgWVASLsFlpDh96iyDWQ9Na5fN2CC0bVt4CosJ+FyguKmtjnLl3Gm6RxS2vtaET1Ow0AiH
      g6jYmK4CosUF/P/muHZWJVkBygAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
