<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
        <calculation class='tableau' formula='5.0' />
        <range granularity='1.0' max='10.0' min='1.0' />
      </column>
    </datasource>
    <datasource caption='air_bnb_all_cities' inline='true' name='federated.11vinx40duwgbv1ej636w0oqq2to' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='air_bnb_all_cities' name='textscan.0hkrp1k0n1urqe1acvfmc1lryf5h'>
            <connection class='textscan' directory='C:/Users/TejaKrishnaPulaganti/Downloads' filename='air_bnb_all_cities.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0hkrp1k0n1urqe1acvfmc1lryf5h' name='air_bnb_all_cities.csv' table='[air_bnb_all_cities#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='real' name='realSum' ordinal='0' />
            <column datatype='string' name='room_type' ordinal='1' />
            <column datatype='boolean' name='room_shared' ordinal='2' />
            <column datatype='boolean' name='room_private' ordinal='3' />
            <column datatype='real' name='person_capacity' ordinal='4' />
            <column datatype='boolean' name='host_is_superhost' ordinal='5' />
            <column datatype='integer' name='multi' ordinal='6' />
            <column datatype='integer' name='biz' ordinal='7' />
            <column datatype='real' name='cleanliness_rating' ordinal='8' />
            <column datatype='real' name='guest_satisfaction_overall' ordinal='9' />
            <column datatype='integer' name='bedrooms' ordinal='10' />
            <column datatype='real' name='dist' ordinal='11' />
            <column datatype='real' name='metro_dist' ordinal='12' />
            <column datatype='real' name='attr_index' ordinal='13' />
            <column datatype='real' name='attr_index_norm' ordinal='14' />
            <column datatype='real' name='rest_index' ordinal='15' />
            <column datatype='real' name='rest_index_norm' ordinal='16' />
            <column datatype='real' name='lng' ordinal='17' />
            <column datatype='real' name='lat' ordinal='18' />
            <column datatype='string' name='City' ordinal='19' />
            <column datatype='string' name='day' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0hkrp1k0n1urqe1acvfmc1lryf5h' name='air_bnb_all_cities.csv' table='[air_bnb_all_cities#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='real' name='realSum' ordinal='0' />
            <column datatype='string' name='room_type' ordinal='1' />
            <column datatype='boolean' name='room_shared' ordinal='2' />
            <column datatype='boolean' name='room_private' ordinal='3' />
            <column datatype='real' name='person_capacity' ordinal='4' />
            <column datatype='boolean' name='host_is_superhost' ordinal='5' />
            <column datatype='integer' name='multi' ordinal='6' />
            <column datatype='integer' name='biz' ordinal='7' />
            <column datatype='real' name='cleanliness_rating' ordinal='8' />
            <column datatype='real' name='guest_satisfaction_overall' ordinal='9' />
            <column datatype='integer' name='bedrooms' ordinal='10' />
            <column datatype='real' name='dist' ordinal='11' />
            <column datatype='real' name='metro_dist' ordinal='12' />
            <column datatype='real' name='attr_index' ordinal='13' />
            <column datatype='real' name='attr_index_norm' ordinal='14' />
            <column datatype='real' name='rest_index' ordinal='15' />
            <column datatype='real' name='rest_index_norm' ordinal='16' />
            <column datatype='real' name='lng' ordinal='17' />
            <column datatype='real' name='lat' ordinal='18' />
            <column datatype='string' name='City' ordinal='19' />
            <column datatype='string' name='day' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>realSum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[realSum]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>realSum</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[room_type]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>room_type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_shared</remote-name>
            <remote-type>11</remote-type>
            <local-name>[room_shared]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>room_shared</remote-alias>
            <ordinal>2</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_private</remote-name>
            <remote-type>11</remote-type>
            <local-name>[room_private]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>room_private</remote-alias>
            <ordinal>3</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>person_capacity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[person_capacity]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>person_capacity</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_is_superhost</remote-name>
            <remote-type>11</remote-type>
            <local-name>[host_is_superhost]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>host_is_superhost</remote-alias>
            <ordinal>5</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>multi</remote-name>
            <remote-type>20</remote-type>
            <local-name>[multi]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>multi</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>biz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[biz]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>biz</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cleanliness_rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cleanliness_rating]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>cleanliness_rating</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>guest_satisfaction_overall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[guest_satisfaction_overall]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>guest_satisfaction_overall</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bedrooms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bedrooms]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>bedrooms</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dist]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>dist</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metro_dist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[metro_dist]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>metro_dist</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attr_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[attr_index]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>attr_index</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attr_index_norm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[attr_index_norm]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>attr_index_norm</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rest_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rest_index]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>rest_index</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rest_index_norm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rest_index_norm]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>rest_index_norm</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lng]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>lng</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[air_bnb_all_cities.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
          <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
          <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
          <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
          <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
          <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
          <semantic-value key='&quot;paris&quot;' value='48.8566' />
          <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
          <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
          <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
          <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
          <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
          <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
          <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
          <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
          <semantic-value key='&quot;rome&quot;' value='12.4964' />
          <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
        </semantic-values>
      </column>
      <column aggregation='None' datatype='integer' name='[Cleanliness Rating (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[cleanliness_rating]' peg='0' size='1.328' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='air_bnb_all_cities.csv' datatype='table' name='[__tableau_internal_object_id__].[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]' role='measure' type='quantitative' />
      <column caption='Attr Index' datatype='real' name='[attr_index]' role='measure' type='quantitative' />
      <column caption='Attr Index Norm' datatype='real' name='[attr_index_norm]' role='measure' type='quantitative' />
      <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
      <column caption='Biz' datatype='integer' name='[biz]' role='measure' type='quantitative' />
      <column caption='Cleanliness Rating' datatype='real' name='[cleanliness_rating]' role='measure' type='quantitative' />
      <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
      <column caption='Dist' datatype='real' name='[dist]' role='measure' type='quantitative' />
      <column caption='Guest Satisfaction Overall' datatype='real' name='[guest_satisfaction_overall]' role='measure' type='quantitative' />
      <column caption='Host Is Superhost' datatype='boolean' name='[host_is_superhost]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Lng' datatype='real' name='[lng]' role='measure' type='quantitative' />
      <column caption='Metro Dist' datatype='real' name='[metro_dist]' role='measure' type='quantitative' />
      <column caption='Multi' datatype='integer' name='[multi]' role='measure' type='quantitative' />
      <column caption='Person Capacity' datatype='real' name='[person_capacity]' role='measure' type='quantitative' />
      <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
      <column caption='Rest Index' datatype='real' name='[rest_index]' role='measure' type='quantitative' />
      <column caption='Rest Index Norm' datatype='real' name='[rest_index_norm]' role='measure' type='quantitative' />
      <column caption='Room Private' datatype='boolean' name='[room_private]' role='dimension' type='nominal' />
      <column caption='Room Shared' datatype='boolean' name='[room_shared]' role='dimension' type='nominal' />
      <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
      <column-instance column='[cleanliness_rating]' derivation='Avg' name='[avg:cleanliness_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[guest_satisfaction_overall]' derivation='Avg' name='[avg:guest_satisfaction_overall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[metro_dist]' derivation='Avg' name='[avg:metro_dist:qk]' pivot='key' type='quantitative' />
      <column-instance column='[person_capacity]' derivation='Avg' name='[avg:person_capacity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[guest_satisfaction_overall]' derivation='Median' name='[med:guest_satisfaction_overall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[realSum]' derivation='Median' name='[med:realSum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[cleanliness_rating]' derivation='None' name='[none:cleanliness_rating:ok]' pivot='key' type='ordinal' />
      <column-instance column='[day]' derivation='None' name='[none:day:nk]' pivot='key' type='nominal' />
      <column-instance column='[guest_satisfaction_overall]' derivation='None' name='[none:guest_satisfaction_overall:ok]' pivot='key' type='ordinal' />
      <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
      <group caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
        </groupfilter>
      </group>
      <group caption='Action (City,Day)' hidden='true' name='[Action (City,Day)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[day]' />
        </groupfilter>
      </group>
      <group caption='Action (City,Room Type)' hidden='true' name='[Action (City,Room Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[room_type]' />
        </groupfilter>
      </group>
      <group caption='Action (Cleanliness Rating,Guest Satisfaction Overall)' hidden='true' name='[Action (Cleanliness Rating,Guest Satisfaction Overall)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:cleanliness_rating:ok]' />
          <groupfilter function='level-members' level='[none:guest_satisfaction_overall:ok]' />
        </groupfilter>
      </group>
      <group caption='Bottom' name='[City Set 2]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([realSum])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[City]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top city' name='[City Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([realSum])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[City]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Affordable and Expensive' delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[City Set 2]' function='reference' />
          <groupfilter field='[City Set]' function='reference' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Assignments/Coding Challenge BI/air_bnb_all_cities.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/27/2023 06:16:45 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='air_bnb_all_cities' increment-value='%null%' refresh-type='create' rows-inserted='51707' timestamp-start='2023-03-27 06:16:43.942' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>realSum</remote-name>
              <remote-type>5</remote-type>
              <local-name>[realSum]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>realSum</remote-alias>
              <ordinal>0</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7847</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[room_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room_type</remote-alias>
              <ordinal>1</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room_shared</remote-name>
              <remote-type>11</remote-type>
              <local-name>[room_shared]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room_shared</remote-alias>
              <ordinal>2</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room_private</remote-name>
              <remote-type>11</remote-type>
              <local-name>[room_private]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room_private</remote-alias>
              <ordinal>3</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>person_capacity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[person_capacity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>person_capacity</remote-alias>
              <ordinal>4</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>host_is_superhost</remote-name>
              <remote-type>11</remote-type>
              <local-name>[host_is_superhost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>host_is_superhost</remote-alias>
              <ordinal>5</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>multi</remote-name>
              <remote-type>20</remote-type>
              <local-name>[multi]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>multi</remote-alias>
              <ordinal>6</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>biz</remote-name>
              <remote-type>20</remote-type>
              <local-name>[biz]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>biz</remote-alias>
              <ordinal>7</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cleanliness_rating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cleanliness_rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cleanliness_rating</remote-alias>
              <ordinal>8</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>guest_satisfaction_overall</remote-name>
              <remote-type>5</remote-type>
              <local-name>[guest_satisfaction_overall]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>guest_satisfaction_overall</remote-alias>
              <ordinal>9</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>68</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bedrooms</remote-name>
              <remote-type>20</remote-type>
              <local-name>[bedrooms]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bedrooms</remote-alias>
              <ordinal>10</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dist</remote-name>
              <remote-type>5</remote-type>
              <local-name>[dist]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dist</remote-alias>
              <ordinal>11</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>metro_dist</remote-name>
              <remote-type>5</remote-type>
              <local-name>[metro_dist]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>metro_dist</remote-alias>
              <ordinal>12</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attr_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[attr_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attr_index</remote-alias>
              <ordinal>13</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attr_index_norm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[attr_index_norm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attr_index_norm</remote-alias>
              <ordinal>14</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rest_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[rest_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rest_index</remote-alias>
              <ordinal>15</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rest_index_norm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[rest_index_norm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rest_index_norm</remote-alias>
              <ordinal>16</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51707</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lng</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lng]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lng</remote-alias>
              <ordinal>17</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15080</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>18</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12775</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>19</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>day</remote-name>
              <remote-type>129</remote-type>
              <local-name>[day]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>day</remote-alias>
              <ordinal>20</ordinal>
              <family>air_bnb_all_cities.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[med:guest_satisfaction_overall:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:metro_dist:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:guest_satisfaction_overall:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:cleanliness_rating:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:person_capacity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[med:realSum:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;amsterdam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;budapest&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;berlin&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;london&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;vienna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;barcelona&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;lisbon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;athens&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;paris&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:day:nk]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;weekends&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;weekdays&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:room_type:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Entire home/apt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Private room&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Shared room&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
          <range granularity='1.0' max='10.0' min='1.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='air_bnb_all_cities.csv' id='air_bnb_all_cities.csv_4C85EF459DFD409D8CB7BB16455344CB'>
            <properties context=''>
              <relation connection='textscan.0hkrp1k0n1urqe1acvfmc1lryf5h' name='air_bnb_all_cities.csv' table='[air_bnb_all_cities#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='real' name='realSum' ordinal='0' />
                  <column datatype='string' name='room_type' ordinal='1' />
                  <column datatype='boolean' name='room_shared' ordinal='2' />
                  <column datatype='boolean' name='room_private' ordinal='3' />
                  <column datatype='real' name='person_capacity' ordinal='4' />
                  <column datatype='boolean' name='host_is_superhost' ordinal='5' />
                  <column datatype='integer' name='multi' ordinal='6' />
                  <column datatype='integer' name='biz' ordinal='7' />
                  <column datatype='real' name='cleanliness_rating' ordinal='8' />
                  <column datatype='real' name='guest_satisfaction_overall' ordinal='9' />
                  <column datatype='integer' name='bedrooms' ordinal='10' />
                  <column datatype='real' name='dist' ordinal='11' />
                  <column datatype='real' name='metro_dist' ordinal='12' />
                  <column datatype='real' name='attr_index' ordinal='13' />
                  <column datatype='real' name='attr_index_norm' ordinal='14' />
                  <column datatype='real' name='rest_index' ordinal='15' />
                  <column datatype='real' name='rest_index_norm' ordinal='16' />
                  <column datatype='real' name='lng' ordinal='17' />
                  <column datatype='real' name='lat' ordinal='18' />
                  <column datatype='string' name='City' ordinal='19' />
                  <column datatype='string' name='day' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_53489D4BA2124924AEED936C0C2D25EC]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Affordable and expensive' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Affordable and expensive' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3_2D4DD8C6E5ED4FAD8CE3FD80C04C8CB6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Affordable and expensive' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action5_53DD40DF5F39467BB259A58DE8F30D64]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Type of Room' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action5_D0BA231176684239AD41B37F87DFEB0F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='rating vs price' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action6_DD31BF3757474297BE04F4964E23BAC3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='weekday vs weekend' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action7_D4E8D77E15714FB3B8106FC78548244A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sales drivers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Affordable and expensive'>
      <table>
        <view>
          <datasources>
            <datasource caption='air_bnb_all_cities' name='federated.11vinx40duwgbv1ej636w0oqq2to' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11vinx40duwgbv1ej636w0oqq2to'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
                <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
                <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
                <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
                <semantic-value key='&quot;paris&quot;' value='48.8566' />
                <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
                <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
                <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
                <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
                <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
                <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
                <semantic-value key='&quot;rome&quot;' value='12.4964' />
                <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
              </semantic-values>
            </column>
            <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
            <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action6_4BD8D191E37C4F3DB69430DFDAA18796]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DD31BF3757474297BE04F4964E23BAC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[day]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_53DD40DF5F39467BB259A58DE8F30D64]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[room_type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' scope='cols' value='Avg Booking Price' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' num-steps='4' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff5a5f</color>
                <color>#f87276</color>
                <color>#f2898c</color>
                <color>#ec9fa1</color>
                <color>#e5b4b5</color>
                <color>#dfc7c7</color>
                <color>#d9d9d9</color>
                <color>#add0cd</color>
                <color>#85c8c2</color>
                <color>#5fbfb8</color>
                <color>#3cb7ad</color>
                <color>#1daea3</color>
                <color>#00a699</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='5' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</rows>
        <cols>[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]</cols>
      </table>
      <simple-id uuid='{610289D0-7D39-4AA7-B205-9CE09BE5815C}' />
    </worksheet>
    <worksheet name='Sales drivers'>
      <table>
        <view>
          <datasources>
            <datasource caption='air_bnb_all_cities' name='federated.11vinx40duwgbv1ej636w0oqq2to' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11vinx40duwgbv1ej636w0oqq2to'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
                <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
                <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
                <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
                <semantic-value key='&quot;paris&quot;' value='48.8566' />
                <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
                <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
                <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
                <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
                <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
                <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
                <semantic-value key='&quot;rome&quot;' value='12.4964' />
                <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
              </semantic-values>
            </column>
            <column-instance column='[bedrooms]' derivation='Avg' name='[avg:bedrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cleanliness_rating]' derivation='Avg' name='[avg:cleanliness_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[guest_satisfaction_overall]' derivation='Avg' name='[avg:guest_satisfaction_overall:qk]' pivot='key' type='quantitative' />
            <column-instance column='[metro_dist]' derivation='Avg' name='[avg:metro_dist:qk]' pivot='key' type='quantitative' />
            <column-instance column='[person_capacity]' derivation='Avg' name='[avg:person_capacity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='Cleanliness Rating' datatype='real' name='[cleanliness_rating]' role='measure' type='quantitative' />
            <column caption='Guest Satisfaction Overall' datatype='real' name='[guest_satisfaction_overall]' role='measure' type='quantitative' />
            <column caption='Metro Dist' datatype='real' name='[metro_dist]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column caption='Person Capacity' datatype='real' name='[person_capacity]' role='measure' type='quantitative' />
            <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:guest_satisfaction_overall:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:metro_dist:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:person_capacity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:cleanliness_rating:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.11vinx40duwgbv1ej636w0oqq2to].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]&quot;</bucket>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:guest_satisfaction_overall:qk]&quot;</bucket>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:metro_dist:qk]&quot;</bucket>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:person_capacity:qk]&quot;</bucket>
              <bucket>&quot;[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:cleanliness_rating:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[:Measure Names]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='width' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[:Measure Names]' value='111' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[Multiple Values]' num-steps='7' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#daf2da</color>
                <color>#c3f3c3</color>
                <color>#abf5ab</color>
                <color>#93f693</color>
                <color>#7cf87c</color>
                <color>#63f963</color>
                <color>#4bfa4b</color>
                <color>#32fc32</color>
                <color>#19fd19</color>
                <color>#00ff00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Multiple Values]' />
              <lod column='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:bedrooms:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</rows>
        <cols>[federated.11vinx40duwgbv1ej636w0oqq2to].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E2B856F2-CF83-4762-AA71-5041E86417A9}' />
    </worksheet>
    <worksheet name='Type of Room'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Room type across Cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='air_bnb_all_cities' name='federated.11vinx40duwgbv1ej636w0oqq2to' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11vinx40duwgbv1ej636w0oqq2to'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
                <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
                <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
                <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
                <semantic-value key='&quot;paris&quot;' value='48.8566' />
                <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
                <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
                <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
                <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
                <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
                <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
                <semantic-value key='&quot;rome&quot;' value='12.4964' />
                <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
              </semantic-values>
            </column>
            <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
            <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action3_2D4DD8C6E5ED4FAD8CE3FD80C04C8CB6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DD31BF3757474297BE04F4964E23BAC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[day]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='1000.0' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' scope='cols' value='Avg Booking Price' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</rows>
        <cols>[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]</cols>
      </table>
      <simple-id uuid='{52D5F28C-1CE9-4AC5-AFF4-329D8D0A6DF4}' />
    </worksheet>
    <worksheet name='rating vs price'>
      <table>
        <view>
          <datasources>
            <datasource caption='air_bnb_all_cities' name='federated.11vinx40duwgbv1ej636w0oqq2to' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11vinx40duwgbv1ej636w0oqq2to'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
                <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
                <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
                <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
                <semantic-value key='&quot;paris&quot;' value='48.8566' />
                <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
                <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
                <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
                <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
                <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
                <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
                <semantic-value key='&quot;rome&quot;' value='12.4964' />
                <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
              </semantic-values>
            </column>
            <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
            <column caption='Cleanliness Rating' datatype='real' name='[cleanliness_rating]' role='measure' type='quantitative' />
            <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
            <column caption='Guest Satisfaction Overall' datatype='real' name='[guest_satisfaction_overall]' role='measure' type='quantitative' />
            <column-instance column='[cleanliness_rating]' derivation='None' name='[none:cleanliness_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[guest_satisfaction_overall]' derivation='None' name='[none:guest_satisfaction_overall:qk]' pivot='key' type='quantitative' />
            <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action6_4BD8D191E37C4F3DB69430DFDAA18796]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DD31BF3757474297BE04F4964E23BAC3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[day]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_53DD40DF5F39467BB259A58DE8F30D64]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[room_type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]' />
          <slices>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Day)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:cleanliness_rating:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:guest_satisfaction_overall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]</rows>
        <cols>([federated.11vinx40duwgbv1ej636w0oqq2to].[none:cleanliness_rating:qk] + [federated.11vinx40duwgbv1ej636w0oqq2to].[none:guest_satisfaction_overall:qk])</cols>
      </table>
      <simple-id uuid='{D4E009B4-6C95-4A0A-925B-FA316FD8DBB3}' />
    </worksheet>
    <worksheet name='weekday vs weekend'>
      <table>
        <view>
          <datasources>
            <datasource caption='air_bnb_all_cities' name='federated.11vinx40duwgbv1ej636w0oqq2to' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11vinx40duwgbv1ej636w0oqq2to'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='52.367600000000003' />
                <semantic-value key='&quot;athens&quot;' value='37.983800000000002' />
                <semantic-value key='&quot;barcelona&quot;' value='41.3874' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='47.497900000000001' />
                <semantic-value key='&quot;lisbon&quot;' value='38.722299999999997' />
                <semantic-value key='&quot;paris&quot;' value='48.8566' />
                <semantic-value key='&quot;rome&quot;' value='41.902799999999999' />
                <semantic-value key='&quot;vienna&quot;' value='48.208199999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;amsterdam&quot;' value='4.9040999999999997' />
                <semantic-value key='&quot;athens&quot;' value='23.727499999999999' />
                <semantic-value key='&quot;barcelona&quot;' value='2.1686000000000001' />
                <semantic-value key='&quot;berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;budapest&quot;' value='19.040199999999999' />
                <semantic-value key='&quot;lisbon&quot;' value='9.1393000000000004' />
                <semantic-value key='&quot;paris&quot;' value='2.3521999999999998' />
                <semantic-value key='&quot;rome&quot;' value='12.4964' />
                <semantic-value key='&quot;vienna&quot;' value='16.373799999999999' />
              </semantic-values>
            </column>
            <column-instance column='[realSum]' derivation='Avg' name='[avg:realSum:qk]' pivot='key' type='quantitative' />
            <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[day]' derivation='None' name='[none:day:nk]' pivot='key' type='nominal' />
            <column caption='Real Sum' datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[realSum]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action6_4BD8D191E37C4F3DB69430DFDAA18796]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_53DD40DF5F39467BB259A58DE8F30D64]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[room_type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]' />
          <slices>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City)]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</column>
            <column>[federated.11vinx40duwgbv1ej636w0oqq2to].[Action (City,Room Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' scope='cols' value='Avg Booking Price' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]</rows>
        <cols>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{15534AFB-F2D8-4FB3-AFAE-DE4252AA815C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Expensive and Affordable cities' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
          <range granularity='1.0' max='10.0' min='1.0' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='33' param='horz' type-v2='layout-flow' w='98438' x='781' y='1042'>
            <zone h='97916' id='31' type-v2='layout-basic' w='98438' x='781' y='1042'>
              <zone h='32638' id='29' name='Affordable and expensive' w='49217' x='781' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32638' id='58' name='weekday vs weekend' w='49221' x='49998' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32638' id='37' name='rating vs price' w='49217' x='781' y='33680'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32640' id='60' name='Sales drivers' w='98438' x='781' y='66318'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32638' id='62' name='Type of Room' w='49221' x='49998' y='33680'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8854' id='64' is-scaled='1' param='C:/Users/ManojP/Downloads/download.jpg' type-v2='bitmap' w='10449' x='-9277' y='521' />
        <zone h='8724' id='34' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='15625' x='34180' y='19141' />
        <zone h='7552' id='59' name='weekday vs weekend' pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]' type-v2='color' w='13574' x='85156' y='26172' />
        <zone h='11458' id='63' name='Type of Room' pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]' type-v2='color' w='12598' x='84277' y='51563' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='76' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='75' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone fixed-size='68' h='8854' id='64' is-fixed='true' is-scaled='1' param='C:/Users/ManojP/Downloads/download.jpg' type-v2='bitmap' w='10449' x='-9277' y='521'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='243' h='32638' id='29' is-fixed='true' name='Affordable and expensive' w='49217' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='243' h='32638' id='58' is-fixed='true' name='weekday vs weekend' w='49221' x='49998' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7552' id='59' name='weekday vs weekend' pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]' type-v2='color' w='13574' x='85156' y='26172'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8724' id='34' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='15625' x='34180' y='19141'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='242' h='32638' id='37' is-fixed='true' name='rating vs price' w='49217' x='781' y='33680'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='242' h='32638' id='62' is-fixed='true' name='Type of Room' w='49221' x='49998' y='33680'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11458' id='63' name='Type of Room' pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]' type-v2='color' w='12598' x='84277' y='51563'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='243' h='32640' id='60' is-fixed='true' name='Sales drivers' w='98438' x='781' y='66318'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{39102036-2310-4956-85B0-0020466790FD}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Affordable and expensive'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C87D8F2F-1DDA-4C45-A4DD-5669BFB637C1}' />
    </window>
    <window class='worksheet' name='weekday vs weekend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{796552A2-62AE-4616-B992-718B03B827D1}' />
    </window>
    <window class='worksheet' name='rating vs price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:City:nk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:cleanliness_rating:qk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:guest_satisfaction_overall:qk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_private:nk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_shared:nk]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{EAC52C0A-7499-48FA-803B-1D2D4B8ECB1D}' />
    </window>
    <window class='worksheet' name='Sales drivers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Multiple Values]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5A818D8C-227B-4F9E-8C84-1911FE65A48F}' />
    </window>
    <window class='worksheet' maximized='true' name='Type of Room'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[Set 1]</field>
            <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D46D11B-6D6C-4B87-8389-8CBDF439A15B}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Affordable and expensive'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.11vinx40duwgbv1ej636w0oqq2to].[avg:realSum:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sales drivers'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Type of Room'>
          <highlight>
            <color-one-way>
              <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:room_type:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='rating vs price'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='weekday vs weekend'>
          <highlight>
            <color-one-way>
              <field>[federated.11vinx40duwgbv1ej636w0oqq2to].[none:day:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='34' />
      <simple-id uuid='{A969553E-227B-4855-A974-3DBB0668D007}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='288' name='Affordable and expensive' width='288'>
      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
      ICGEY/5/gtF0sWwFY5cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='288' name='Dashboard 1' width='288'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='288' name='Sales drivers' width='288'>
      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
      5gX7afk3ikfPivRu/qYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='288' name='Type of Room' width='288'>
      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
    </thumbnail>
    <thumbnail height='288' name='rating vs price' width='288'>
      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
      SnLcCwPysQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='288' name='weekday vs weekend' width='288'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
